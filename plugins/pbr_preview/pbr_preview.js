"use strict";(()=>{var b=THREE,X=Vue;var N="_NONE_",u={albedo:{id:"albedo",label:"Albedo",description:"The color of the material",map:"map",icon:"tonality",default:new b.Color(16777215),regex:new RegExp("(s|_)*(basecolor|color|albedo)","i")},metalness:{id:"metalness",label:"Metalness",description:"The material's metalness map",map:"metalnessMap",icon:"brightness_6",default:new b.Color(0),regex:new RegExp("[ _]*metal(lic|ness)?","i")},emissive:{id:"emissive",label:"Emissive",description:"The material's emissive map",map:"emissiveMap",icon:"wb_twilight",default:new b.Color(0),regex:new RegExp("[ _]*(emissive|emission)","i")},roughness:{id:"roughness",label:"Roughness",description:"The material's roughness map",map:"roughnessMap",icon:"grain",default:new b.Color(16777215),regex:new RegExp("[ _]*rough(ness)?","i")},height:{id:"height",label:"Height",description:"The material's height map",map:"bumpMap",icon:"landscape",default:new b.Color(16777215),regex:new RegExp("[ _]*(height|bump)","i")},normal:{id:"normal",label:"Normal",description:"The material's normal map",map:"normalMap",icon:"looks",default:new b.Color("rgb(128, 128, 255)"),regex:new RegExp("[ _]*normal","i")},ao:{id:"ao",label:"Ambient Occlusion",description:"The material's ambient occlusion map",map:"aoMap",icon:"motion_mode",default:new b.Color(16777215),regex:new RegExp("[ _]*(ao|ambientocclusion|ambient occlusion)","i")}},s={},C=[],L=[];var Y=[...Object.keys(u).map(t=>u[t].id),N];C.push(()=>{s.channelProp=new Property(TextureLayer,"enum","channel",{default:N,values:Y,label:"PBR Channel",exposed:!1}),s.textureChannelProp=new Property(Texture,"enum","channel",{default:N,values:Y,label:"PBR Channel",exposed:!1}),s.materialTextureProp=new Property(Texture,"boolean","material",{default:!1,label:"Material Texture"}),s.pbrMaterialsProp=new Property(ModelProject,"object","pbr_materials",{default:{},exposed:!1,label:"PBR Materials"}),s.projectMaterialsProp=new Property(ModelProject,"object","bb_materials",{default:{},exposed:!1,label:"Project Materials"}),s.projectPbrModeProp=new Property(ModelProject,"boolean","pbr_active",{default:!1,exposed:!1,values:[],label:"PBR Mode"})});function D(){return Texture.selected?Texture.selected:TextureLayer.selected?TextureLayer.selected.texture:Project?Project.selected_texture?Project.selected_texture:Project.textures.find(t=>t.selected)??null:Texture.all.find(t=>t.selected)??Texture.getDefault()}function R(){return TextureLayer.selected?TextureLayer.selected:Texture.selected?.selected_layer?Texture.selected.selected_layer:Project.selected_texture!==null&&Project.selected_texture?.layers_enabled===!0?Project.selected_texture.layers.find(t=>t.selected)??Project.selected_texture.layers[0]:D()?.getActiveLayer()??null}function ee(){return Project?Project.model_identifier.length>0?Project.model_identifier:Project.getDisplayName():pathToName(D()?.name??"texture")}function te(t,a){let e;return function(...r){let n=()=>{e=void 0,t.apply(this,r)};clearTimeout(e),e=setTimeout(n,a)}}function H(t){let a=MediaPreview.renderer??new b.WebGLRenderer({alpha:!0,antialias:!0}),e=new b.Scene,r=new b.PerspectiveCamera(75,96/96,.1,1e3),n=new b.AmbientLight(16777215,.75);e.add(n);let c=new b.PointLight(16777215,1,100);c.position.set(5,5,5),e.add(c);let i=new b.SphereGeometry(1,32,32),o=t instanceof b.MeshStandardMaterial&&t.isMeshStandardMaterial?t:new b.MeshStandardMaterial({color:t.albedo,metalness:t.metalness??0,roughness:t.roughness??1,emissive:t.emissive,bumpScale:t.height??0,envMap:PreviewScene.active?.cubemap??null,envMapIntensity:.5}),p=new b.Mesh(i,o);e.add(p),r.position.x=0,r.position.y=0,r.position.z=2,a.setSize(96,96),a.render(e,r);let f=a.domElement.toDataURL();return o.dispose(),MediaPreview.renderer||(a.clear(),a.dispose()),f}function Q(t,a){let e=a??document.createElement("canvas"),r=e.getContext("2d");if(!r)return e.remove(),null;let n=Math.max(Project?Project.texture_width:16,16),c=Math.max(Project?Project.texture_height:16,16);e.width=n,e.height=c,r.fillStyle=`rgb(${t.r*255}, ${t.g*255}, ${t.b*255})`,r.fillRect(0,0,n,c);let i=e.toDataURL();return a||e.remove(),i}var De=(t=!0)=>{let a=Project?Project.textures??Texture.all:Texture.all;return t?a.filter(e=>e.layers_enabled&&e.layers.length>0).flatMap(e=>e.layers):a},k=class t{constructor(a,e){this._scope=a??De(),this._materialUuid=e}merToCanvas(){let a=this.getTexture(u.emissive),e=this.getTexture(u.roughness),r=this.getTexture(u.metalness);if(!a&&!e&&!r){let{metalness:n,emissive:c,roughness:i}=this.decodeMer();n&&(r=t.makePixelatedCanvas(n)),c&&(a=t.makePixelatedCanvas(c)),i&&(e=t.makePixelatedCanvas(i))}return{emissiveMap:a,roughnessMap:e,metalnessMap:r}}getMaterial(a={}){let{emissiveMap:e,roughnessMap:r,metalnessMap:n}=Format.id.startsWith("bedrock")?this.merToCanvas():{emissiveMap:this.getTexture(u.emissive),roughnessMap:this.getTexture(u.roughness),metalnessMap:this.getTexture(u.metalness)},c=this.getTexture(u.normal);return new b.MeshStandardMaterial({map:this.getTexture(u.albedo)??t.makePixelatedCanvas(TextureLayer.selected?.canvas??Texture.all.find(i=>i.selected)?.canvas??Texture.getDefault().canvas),aoMap:this.getTexture(u.ao),bumpMap:this.getTexture(u.height),normalMap:c,normalScale:new b.Vector2(-1,1),metalnessMap:n,metalness:n?1:0,roughnessMap:r,roughness:1,emissiveMap:e,emissiveIntensity:e?1:0,emissive:e?16777215:0,envMap:PreviewScene.active?.cubemap??null,envMapIntensity:.95,alphaTest:.1,transparent:!0,...a})}renderMaterialPreview(){return H(this.getMaterial())}saveTexture(a,e){Project&&(Project.pbr_materials||(Project.pbr_materials={}),Project.pbr_materials[this._materialUuid]||(Project.pbr_materials[this._materialUuid]={}),Project.pbr_materials[this._materialUuid][a.id]=e.uuid,e.extend({channel:a.id}))}findTexture(a,e=!0){if(!Project)return null;let r=this._scope.find(p=>p.channel&&(p.channel===a||p.channel===a.id));if(r)return r;let[n,c]=typeof a=="string"?[a,new RegExp(`_*${a}(.[^.]+)?$`,"i")]:[a.id,a.regex??new RegExp(`_*${a.id}(.[^.]+)?$`,"i")];Project.pbr_materials=Project.pbr_materials??{};let i=Project.pbr_materials[this._materialUuid];if(e&&!i&&n!==N)return this._scope.find(p=>c?.test(p.name))??null;let o=i?.[n];return o?this._scope.find(p=>p.uuid===o)??null:null}static makePixelatedCanvas(a){let e=new b.CanvasTexture(a,void 0,void 0,void 0,b.NearestFilter,b.NearestFilter);return e.needsUpdate=!0,e}getTexture(a){let e=this.findTexture(a);return e?t.makePixelatedCanvas(e.canvas):null}static extractChannel(a,e){let r=a.canvas,{width:n,height:c}=r,i=r.getContext("2d");if(!i||!n||!c)return null;let o=document.createElement("canvas");o.width=n,o.height=c;let p=o.getContext("2d");if(!p)return null;let f={r:0,g:1,b:2,a:3}[e],{data:x}=i.getImageData(0,0,n,c),h=new Uint8ClampedArray(n*c*4);for(let m=0;m<x.length;m+=4){let g=x[m+f];h[m]=g,h[m+1]=g,h[m+2]=g,h[m+3]=255}let _=new ImageData(h,n,c);return p.putImageData(_,0,0),o}decodeMer(a=1){let e=this.findTexture("mer",!0);if(!e)return{metalness:null,emissive:null,emissiveLevel:null,roughness:null,sss:null};let r=t.extractChannel(e,"r"),n=t.extractChannel(e,"g"),c=t.extractChannel(e,"b"),i=t.extractChannel(e,"a"),o=document.createElement("canvas");o.width=e.img.width??16,o.height=e.img.height??16;let p=this.findTexture(u.albedo);p&&(o.width=p.img.width??16,o.height=p.img.height??16);let f=o.getContext("2d"),x=n?.getContext("2d"),h=p?.canvas?.getContext("2d");if(!f||!h||!x)return{metalness:r,emissive:n,roughness:c,sss:i};let _=h.getImageData(0,0,o.width,o.height),m=x.getImageData(0,0,o.width,o.height),g=new Uint8ClampedArray(o.width*o.height*4);for(let l=0;l<_.data.length;l+=4){if(m.data[l]>a){g[l]=_.data[l],g[l+1]=_.data[l+1],g[l+2]=_.data[l+2],g[l+3]=255;continue}g[l]=0,g[l+1]=0,g[l+2]=0,g[l+3]=255}return f.putImageData(new ImageData(g,o.width,o.height),0,0),{metalness:r,emissive:o,emissiveLevel:n,roughness:c,sss:i}}createMer(a=!1){let e=this.findTexture(u.metalness,a),r=this.findTexture(u.emissive,a),n=this.findTexture(u.roughness,a),c=this.findTexture("sss",!1),i=Math.max(e?.img.width??0,r?.img.width??0,n?.img.width??0,Project?Project.texture_width:0,16),o=Math.max(e?.img.height??0,r?.img.height??0,n?.img.height??0,Project?Project.texture_height:0,16),p=document.createElement("canvas");p.width=i,p.height=o;let f=p.getContext("2d");if(!f)return null;let x=e?.img?t.extractChannel(e,"r"):null,h=r?.img?t.extractChannel(r,"g"):null,_=n?.img?t.extractChannel(n,"b"):null,m=c&&c?.img?t.extractChannel(c,"a"):null,g=x?.getContext("2d")?.getImageData(0,0,i,o)??new ImageData(i,o),l=h?.getContext("2d")?.getImageData(0,0,i,o)??new ImageData(i,o),d=_?.getContext("2d")?.getImageData(0,0,i,o)??new ImageData(i,o),v=m?.getContext("2d")?.getImageData(0,0,i,o)??new ImageData(new Uint8ClampedArray(i*o*4).fill(255),i,o),M=new Uint8ClampedArray(i*o*4);for(let w=0;w<M.length;w+=4)M[w]=g.data[w],M[w+1]=l.data[w],M[w+2]=d.data[w],M[w+3]=v.data[w];return f.putImageData(new ImageData(M,i,o),0,0),p}createLabPbrOutput(a=!0){let e=this.findTexture(u.metalness,a),r=this.findTexture(u.emissive,a),n=this.findTexture(u.roughness,a),c=this.findTexture(u.normal,a),i=this.findTexture(u.height,a),o=this.findTexture(u.ao,!1),p=this.findTexture("sss",!0),f=this.findTexture("porosity",!0),x=Math.max(e?.img.width??0,r?.img.width??0,n?.img.width??0,Project?Project.texture_width:0,16),h=Math.max(e?.img.height??0,r?.img.height??0,n?.img.height??0,Project?Project.texture_height:0,16),_=document.createElement("canvas");_.width=x,_.height=h;let m=_.getContext("2d"),g=document.createElement("canvas");g.width=x,g.height=h;let l=g.getContext("2d");if(!m||!l)return null;let d=new Uint8ClampedArray(x*h*4),v=new Uint8ClampedArray(x*h*4),M=e?.canvas,w=r?.canvas,S=n?.canvas,y=p?.canvas,E=f?.canvas,T=M?.getContext("2d"),j=w?.getContext("2d"),de=S?.getContext("2d"),he=y?.getContext("2d"),pe=E?.getContext("2d"),ge=T?.getImageData(0,0,x,h),I=j?.getImageData(0,0,x,h),W=de?.getImageData(0,0,x,h),fe=he?.getImageData(0,0,x,h),xe=pe?.getImageData(0,0,x,h);for(let P=0;P<d.length;P+=4){let Z=W?1-Math.sqrt(W.data[P]/255):0,Pe=Math.min(229,Math.max(0,Math.round((ge?.data[P]??Z)*229))),Ee=xe?.data[P],Le=fe?.data[P];if(d[P]=Z*255,d[P+1]=Pe,d[P+2]=Le??Ee??0,!I){d[P+3]=255;continue}let je=Math.round((I?.data[P]+I?.data[P+1]+I?.data[P+2])/3);d[P+3]=je||255}m.putImageData(new ImageData(d,x,h),0,0);let be=c?.canvas,ve=o?.canvas,_e=i?.canvas,Me=be?.getContext("2d"),we=ve?.getContext("2d"),ye=_e?.getContext("2d"),K=Me?.getImageData(0,0,x,h),Ce=we?.getImageData(0,0,x,h),Te=ye?.getImageData(0,0,x,h);for(let P=0;P<v.length;P+=4)v[P]=K?.data[P]??0,v[P+1]=K?.data[P+1]??0,v[P+2]=Ce?.data[P+2]??255,v[P+3]=Te?.data[P+3]||255;return l.putImageData(new ImageData(v,x,h),0,0),{specular:_,normalMap:g}}decodeLabPbrNormal(a){let e=a.img.width??16,r=a.img.height??16,n=a.canvas.getContext("2d");if(!n)return{};let c=document.createElement("canvas");c.width=e,c.height=r;let i=document.createElement("canvas");i.width=e,i.height=r;let o=document.createElement("canvas");o.width=e,o.height=r;let p=c.getContext("2d"),f=i.getContext("2d"),x=o.getContext("2d"),{data:h}=n.getImageData(0,0,e,r);if(!h||!p||!f||!x)return{};let _=new Uint8ClampedArray(e*r*4),m=new Uint8ClampedArray(e*r*4),g=new Uint8ClampedArray(e*r*4);for(let l=0;l<h.length;l+=4){let d=l+1,v=l+2,M=l+3;_[l]=h[v],_[d]=h[v],_[v]=h[v],_[M]=255,m[l]=h[l],m[d]=h[d],m[v]=255,m[M]=255,g[l]=h[M],g[d]=h[M],g[v]=h[M],g[M]=255}return p.putImageData(new ImageData(_,e,r),0,0),f.putImageData(new ImageData(m,e,r),0,0),x.putImageData(new ImageData(g,e,r),0,0),{ao:c,normal:i,heightmap:o}}decodeLabPbrSpecular(a){let e=a.img.width??16,r=a.img.height??16,n=a.canvas.getContext("2d");if(!n)return{};let c=document.createElement("canvas");c.width=e,c.height=r;let i=document.createElement("canvas");i.width=e,i.height=r;let o=document.createElement("canvas");o.width=e,o.height=r;let p=document.createElement("canvas");p.width=e,p.height=r;let f=document.createElement("canvas");f.width=e,f.height=r;let x=c.getContext("2d"),h=i.getContext("2d"),_=o.getContext("2d"),m=p.getContext("2d"),g=f.getContext("2d"),{data:l}=n.getImageData(0,0,e,r);if(!l||!x||!h||!_||!m||!g)return{};let d=new Uint8ClampedArray(e*r*4),v=new Uint8ClampedArray(e*r*4),M=new Uint8ClampedArray(e*r*4),w=new Uint8ClampedArray(e*r*4),S=new Uint8ClampedArray(e*r*4);for(let y=0;y<l.length;y+=4){let E=y+1,T=y+2,j=y+3;M[y]=255-l[y],M[E]=255-l[y],M[T]=255-l[y],M[j]=255,d[y]=l[E],d[E]=l[E],d[T]=l[E],d[j]=255,v[y]=l[j],v[E]=l[j],v[T]=l[j],v[j]=255,w[y]=0,w[E]=0,w[T]=0,w[j]=255,S[y]=l[T],S[E]=l[T],S[T]=l[T],S[j]=255,l[T]<65&&(w[y]=l[T],w[E]=l[T],w[T]=l[T],w[j]=255,S[y]=0,S[E]=0,S[T]=0,S[j]=255)}return x.putImageData(new ImageData(d,e,r),0,0),h.putImageData(new ImageData(v,e,r),0,0),_.putImageData(new ImageData(M,e,r),0,0),m.putImageData(new ImageData(w,e,r),0,0),g.putImageData(new ImageData(S,e,r),0,0),{metalness:c,emissive:i,roughness:o,sss:p,porosity:f}}createTexturesFromSpecular(a){let e=this.decodeLabPbrSpecular(a);return Object.entries(e).forEach(([r,n])=>{n&&new Texture({name:`${a.name}_${r}`,saved:!1,particle:!1,keep_size:!1}).fromDataURL(n.toDataURL()).add()}),e}createTexturesFromNormal(a){let e=this.decodeLabPbrNormal(a);return Object.entries(e).forEach(([r,n])=>{n&&new Texture({name:`${a.name}_${r}`,saved:!1,particle:!1,keep_size:!1}).fromDataURL(n.toDataURL()).add()}),e}};var U=class{constructor({lightHeight:a=.66,ambientLight:e=[.1,.1,.1],minLightIntensity:r=0,lightDiffuse:n=[1,1,1]}={}){this.lightHeight=a,this.ambientLight=e,this.minLightIntensity=r,this.lightDiffuse=n}bake(a,e,r){let n=e instanceof HTMLCanvasElement?e:this.createCanvas(e.width,e.height),c=r instanceof HTMLCanvasElement?r:this.createCanvas(r.width,r.height),i=n.getContext("2d"),o=c.getContext("2d");i.drawImage(e,0,0),o.drawImage(r,0,0);let p=i.getImageData(0,0,e.width,e.height),f=o.getImageData(0,0,r.width,r.height),x=[],h=[];for(let m=0;m<f.width;++m){h[m]=[];for(let g=0;g<f.height;++g){let l=(m+g*f.width)*4,d=[(f.data[l+0]/255-.5)*2,(f.data[l+1]/255-.5)*2,(f.data[l+2]/255-.5)*2],v=Math.sqrt(d[0]**2+d[1]**2+d[2]**2);h[m][g]=[d[0]/v,d[1]/v,d[2]/v]}}let _=m=>{let g=this.createCanvas(e.width,e.height),l=g.getContext("2d"),d=l.getImageData(0,0,g.width,g.height),v=[Math.cos(m),Math.sin(m),this.lightHeight];for(let M=0;M<f.width;++M)for(let w=0;w<f.height;++w){let S=h[M][w],y=(M+w*f.width)*4,E=[p.data[y+0]/255,p.data[y+1]/255,p.data[y+2]/255,p.data[y+3]],T=S[0]*v[0]+S[1]*v[1]+S[2]*v[2];T=Math.min(1,Math.max(this.minLightIntensity,T));let j=[T*E[0]*this.lightDiffuse[0]+this.ambientLight[0],T*E[1]*this.lightDiffuse[1]+this.ambientLight[1],T*E[2]*this.lightDiffuse[2]+this.ambientLight[2],E[3]];d.data[y+0]=Math.floor(j[0]*255),d.data[y+1]=Math.floor(j[1]*255),d.data[y+2]=Math.floor(j[2]*255),d.data[y+3]=j[3]}return l.putImageData(d,0,0),g};for(let m=0;m<a;++m){let g=Math.PI*2/a*m;x.push(_(g))}return x}createCanvas(a,e){let r=document.createElement("canvas");return r.width=a,r.height=e,r}};var ae=(t,a=8,e=!1)=>{if(!Project)return;let r=Project.selected_texture??Texture.getDefault(),n=new k(r.layers_enabled?r.layers:Project.textures,r.uuid),c=n.findTexture(u.albedo);if(!c){Blockbench.showStatusMessage("Can not bake without a base color assigned.",3e3);return}let i=n.findTexture(u.normal);if(!i){Blockbench.showStatusMessage("Can not bake without a normal map assigned.",3e3);return}let p=new U(t).bake(a,c.canvas,i.canvas),f=new Texture({name:`${c.name}_baked`,saved:!1,particle:!1,keep_size:!1,layers_enabled:!0}).fromDataURL(p[0].toDataURL()),x=e?h=>{let _=n.findTexture(u.emissive);if(!_)return h;let m=_.canvas;if(!m.getContext("2d"))return h;let l=Math.max(h.width,m.width,Project?Project.texture_width:16),d=Math.max(h.height,m.height,Project?Project.texture_height:16),v=document.createElement("canvas");v.width=l,v.height=d;let M=v.getContext("2d");return M?(M.drawImage(h,0,0),M.globalCompositeOperation="screen",M.drawImage(m,0,0),v):h}:h=>h;p.forEach((h,_)=>{new TextureLayer({name:`baked_${_+1}`,data_url:x(h).toDataURL()},f).addForEditing()}),f.add().select(),Blockbench.showQuickMessage("Textures baked \u{1F950}",2e3)};C.push(()=>{s.bakeTexturesDialog=new Dialog("bake_textures",{id:"bake_textures",title:"Bake Textures",buttons:["Bake","Cancel"],form:{ambientLight:{type:"color",label:"Ambient Light",value:"#1f1f1f"},lightDiffuse:{type:"color",label:"Light Diffuse",value:"#ffffff"},lightHeight:{type:"range",label:"Light Height",min:0,max:1,step:.01,value:.66},minLightIntensity:{type:"range",label:"Minimum Light Intensity",min:0,max:1,step:.01,value:0},directions:{type:"number",label:"Directions",value:8,min:1,max:360,step:1},blendEmissive:{type:"checkbox",label:"Blend Emissive",value:!1}},onConfirm(t){let a=new b.Color(t.ambientLight.toString()),e=new b.Color(t.lightDiffuse.toString());ae({ambientLight:[a.r,a.g,a.b],lightDiffuse:[e.r,e.g,e.b],lightHeight:Number(t.lightHeight),minLightIntensity:Number(t.minLightIntensity)},t.directions??8,t.blendEmissive??!1)}}),s.bakeTexturesAction=new Action("bake_textures",{icon:"cake",name:"Bake Textures",description:"Bakes textures for the selected PBR material",click(){s.bakeTexturesDialog?.show()}}),MenuBar.addAction(s.bakeTexturesAction,"tools")});L.push(()=>{MenuBar.removeAction("tools.bake_textures")});function re(t,a){let e=t.getTexture();if(!e||!Project)return null;let r=Project.materials[e.uuid];r.isShaderMaterial&&!Project.bb_materials[e.uuid]?Project.bb_materials[e.uuid]=r:r.isMeshStandardMaterial&&r.dispose();let n=new k(e.layers_enabled?e.layers.filter(c=>c.visible)??null:Project.textures,e.uuid).getMaterial({side:Canvas.getRenderSide(e),...a});return Project.materials[e.uuid]=b.ShaderMaterial.prototype.copy.call(n,r),e}function ne(t){return Object.values(t).filter(a=>a?(Canvas.updateAllFaces(a),!0):!1).length>0}function ke(t,a){let e={};return t.forAllFaces(r=>{let n=re(r,a);n&&(e[n.uuid]=n)}),ne(e)}function Se(t,a){let e={};return Object.keys(t.faces).forEach(r=>{let n=t.faces[r],c=re(n,a);c&&(e[c.uuid]=c)}),ne(e)}var A=(t={})=>{Project&&(Project.pbr_active=Texture.all.length>0&&Project.elements.map(a=>a instanceof Mesh&&ke(a,t)||a instanceof Cube&&Se(a,t)).filter(Boolean).length>0)},B=(t=100)=>te(A,t);var V={},G={};C.push(()=>{Object.entries(u).forEach(([t,a])=>{V[t]=new Action(`assign_channel_${t}`,{icon:a.icon??"tv_options_edit_channels",name:`Assign to ${a.label.toLocaleLowerCase()} channel`,description:`Assign the selected layer to the ${a.label} channel`,category:"textures",condition:{selected:{texture:!0},project:!0,method(){return D()?.material===!0&&R()!==null}},click(){let e=TextureLayer.selected??(Project?Project.selected_texture:null);if(!e)return;Undo.initEdit({layers:[e]}),e.extend({channel:a.id});let r=e instanceof TextureLayer?e.texture:e;r.updateChangesAfterEdit(),Project.pbr_materials[r.uuid]||(Project.pbr_materials[r.uuid]={}),Object.entries(Project.pbr_materials[r.uuid]).forEach(([n,c])=>{c===e.uuid&&(delete Project.pbr_materials[r.uuid][n],e.channel=N)}),r.uuid===e.uuid&&(Project.pbr_materials[r.uuid]={}),Project.pbr_materials[r.uuid][t]=e.uuid,Undo.finishEdit("Change channel assignment"),Blockbench.showQuickMessage(`Assigned "${e.name}" to ${a.label} channel`,2e3),A()}}),G[t]=new Action(`select_channel_${t}`,{icon:a.icon??"tv_options_edit_channels",name:a.label??t,description:`Select the ${a.label} channel`,condition:{project:!0,selected:{texture:!0},modes:["paint"],method(){let e=D();return(e?.layers_enabled?e.layers:Texture.all).some(n=>n.channel===t)}},click(){let e=Texture.selected?.layers_enabled?Texture.selected.layers:Texture.all;if(!e||!e.length)return;let r=e.find(n=>n.channel===t);r&&(r.select(),r.scrollTo())}}),G[t].addLabel(!0,()=>a.label??t)})});L.push(()=>{[...Object.values(V),...Object.values(G)].forEach(a=>{a.delete()})});C.push(()=>{s.unassignChannel=new Action("unassign_channel",{icon:"cancel",name:"Unassign Channel",description:"Unassign the selected layer from the channel",category:"textures",condition:{selected:{texture:!0},method(){let t=TextureLayer.selected??(Project?Project.selected_texture:null);return t?.channel&&t.channel!==N}},click(){let t=TextureLayer.selected??(Project?Project.selected_texture:null);if(!t)return;Undo.initEdit({layers:[t]});let a=t instanceof TextureLayer?t.texture:t,e=t.channel;Project.pbr_materials[a.uuid]={},t.channel=N,a.updateChangesAfterEdit(),Undo.finishEdit("Unassign channel"),Blockbench.showQuickMessage(`Unassigned "${t.name}" from ${e} channel`,2e3),B()}}),s.channelMenu=new Menu("channel_menu",[...Object.keys(u).map(t=>`assign_channel_${t}`),"unassign_channel"],{onOpen(){B()}}),s.channelSelectionMenu=new Menu("channel_selection_menu",Object.keys(u).map(t=>`select_channel_${t}`)),s.openChannelMenu=new Action("pbr_channel_menu",{name:"Assign to PBR Channel",icon:"texture",condition:{modes:["edit","paint"],selected:{texture:!0}},click(t){s.channelMenu?.open(t)},children:[...Object.values(V),s.unassignChannel]}),s.showChannelMenu=new Action("show_channel_menu",{icon:"texture",name:"Assign to PBR Channel",description:"Assign the selected layer to a channel",category:"textures",condition:{modes:["paint"],selected:{texture:!0}},click(t){s.channelMenu?.open(t)}}),s.showChannelSelectionMenu=new Action("show_channel_select_menu",{icon:"tv_options_edit_channels",name:"Select PBR Channel",description:"Select a channel to view",category:"textures",condition:{modes:["paint"],selected:{texture:!0}},click(t){s.channelSelectionMenu?.open(t)}}),s.openChannelMenu&&(MenuBar.addAction(s.openChannelMenu,"image.0"),Texture.prototype.menu.addAction(s.openChannelMenu,"0"),TextureLayer.prototype.menu.addAction(s.openChannelMenu,"0")),Toolbars.layers.add(s.showChannelMenu,1)});L.push(()=>{MenuBar.removeAction("image.pbr_channel_menu"),Texture.prototype.menu.removeAction("pbr_channel_menu"),TextureLayer.prototype.menu.removeAction("pbr_channel_menu"),Toolbars.layers.remove(s.showChannelMenu)});function J(t,a=!1){let e=t.canvas.getContext("2d");if(!e)return null;let r=Math.max(t.img.width??t.canvas.width,Project?Project.texture_width:0,16),n=Math.max(t.img.height??t.canvas.height,Project?Project.texture_height:0,16),{data:c}=e.getImageData(0,0,r,n),i=document.createElement("canvas"),o=i.getContext("2d");if(!o)return null;let p=(l,d)=>{let v=(l+d*r)*4;return c[v]/255};i.width=r,i.height=n,o.drawImage(t.img,0,0,r,n);let f=o.getImageData(0,0,r,n),x=f.data,h=l=>{let d=Math.sqrt(l[0]*l[0]+l[1]*l[1]+l[2]*l[2]);return[l[0]/d,l[1]/d,l[2]/d]};for(let l=0;l<n;l++)for(let d=0;d<r;d++){let v=p(Math.max(d-1,0),l),M=p(Math.min(d+1,r-1),l),w=p(d,Math.max(l-1,0)),S=p(d,Math.min(l+1,n-1)),y=M-v,E=S-w,T=h([-y,-E,1]),j=(l*r+d)*4;x[j]=(T[0]+1)/2*255,x[j+1]=(T[1]+1)/2*255,x[j+2]=(T[2]+1)/2*255,x[j+3]=a?p(d,l)*255:255}o.putImageData(f,0,0);let _=i.toDataURL(),m=`${t.name.replace(/_height(map)?/i,"")}_normal`;if(t instanceof TextureLayer){let l=new TextureLayer({name:m,data_url:_,visible:!0},t.texture);return l.addForEditing(),l}let g=new Texture({name:m,saved:!1,particle:!1}).fromDataURL(_);return Project&&g.add(),g}function se(t){let a=t.canvas.getContext("2d");if(!a)return null;let e=Math.max(t.img.width??t.canvas.width,Project?Project.texture_width:0,16),r=Math.max(t.img.height??t.canvas.height,Project?Project.texture_height:0,16),{data:n}=a.getImageData(0,0,e,r),c=document.createElement("canvas"),i=c.getContext("2d");if(!i)return null;let o=(m,g)=>{let l=(m+g*e)*4;return n[l]/255};c.width=e,c.height=r,i.drawImage(t.img,0,0,e,r);let p=i.getImageData(0,0,e,r),f=p.data;for(let m=0;m<r;m++)for(let g=0;g<e;g++){let l=o(Math.max(g-1,0),m),d=o(Math.min(g+1,e-1),m),v=o(g,Math.max(m-1,0)),M=o(g,Math.min(m+1,r-1)),w=d-l,S=M-v,y=Math.sqrt(w*w+S*S)*255,E=(m*e+g)*4;f[E]=y,f[E+1]=y,f[E+2]=y,f[E+3]=255}i.putImageData(p,0,0);let x=c.toDataURL(),h=`${t.name.replace(/_height(map)?/i,"")}_ao`;if(t instanceof TextureLayer){let m=new TextureLayer({name:h,data_url:x,visible:!0},t.texture);return m.addForEditing(),m}let _=new Texture({name:h,saved:!1,particle:!1,keep_size:!1}).fromDataURL(x);return Project&&_.add(),_}C.push(()=>{s.generateNormal=new Action("generate_normal",{icon:u.normal.icon??"altitude",name:"Generate Normal Map",description:"Generates a normal map from the height map",condition:()=>(R()??D())!==null,click(t){let a=R()??D()??Texture.getDefault();if(!a)return;let e=J(a);if(!e){Blockbench.showQuickMessage("Failed to generate normal map",2e3);return}e.select(t),new k(a instanceof Texture&&a.layers_enabled?a.layers:null,a.uuid).saveTexture(u.normal,e),Blockbench.showQuickMessage("Normal map generated",2e3)}}),s.generateAo=new Action("generate_ao",{icon:u.ao.icon??"motion_mode",name:"Generate Ambient Occlusion Map",description:"Generates an ambient occlusion map from the height map",condition:{selected:{texture:!0},project:!0},click(){let t=R()??D()??Texture.getDefault();if(!t)return;let a=new k(t instanceof Texture&&t.layers_enabled?t.layers:null,t.uuid),e=a.findTexture(u.normal)??J(t);if(!e){Blockbench.showQuickMessage("Unable to generate ambient occlusion map without a normal map",2e3);return}let r=se(e);if(r){a.saveTexture(u.ao,r),r.select(),Blockbench.showQuickMessage("Ambient occlusion map generated",2e3);return}Blockbench.showQuickMessage("Failed to generate ambient occlusion map",2e3)}}),MenuBar.addAction(s.generateNormal,"tools"),MenuBar.addAction(s.generateAo,"tools")});L.push(()=>{MenuBar.removeAction("tools.generate_normal")});C.push(()=>{s.createMaterialTexture=new Action("create_material_texture",{icon:"stacks",name:"Create Material Texture",description:"Creates a new texture for a PBR material",condition:{modes:["edit","paint"],project:!0},click(){if(!Project)return;let t={...u},a=new Texture({name:"New Material",saved:!1,particle:!1});a.extend({material:!0});let e=Texture.all.filter(i=>i.selected||i.multi_selected)??Texture.all,r=D(),n=r?new k(e,r.uuid):null;try{let i=n?.findTexture(u.albedo,!0)?.canvas.toDataURL()??r?.canvas.toDataURL()??Q(new b.Color(8421504),a.canvas);if(!i)return;a.fromDataURL(i);let o=new TextureLayer({name:t.albedo.label,visible:!0,data_url:i,keep_size:!0},a);o.extend({channel:t.albedo.id}),o.addForEditing(),o.texture.updateChangesAfterEdit(),n?.saveTexture(t.albedo,o),delete t.albedo}catch(i){console.warn("Failed to create base color texture",i),Blockbench.showStatusMessage("Failed to create base color texture in new material",3e3)}let c=Object.keys(t).map(i=>{let o=u[i],p=n?.findTexture(o,!0),f=p?p.canvas.toDataURL():Q(o.default??new b.Color(0));if(!f)return;let x=new TextureLayer({name:o.label,visible:!0,data_url:f,keep_size:!0},a);return x.extend({channel:o.id}),n?.saveTexture(o,x),x}).filter(Boolean);Undo.initEdit({textures:Texture.all,layers:c}),a.add().select(),a.activateLayers(),c.map(i=>{i.addForEditing(),a.width=Math.max(a.width,i.img.width),a.height=Math.max(a.height,i.img.height)}),a.updateChangesAfterEdit(),Undo.finishEdit("Create Material Texture")}}),MenuBar.addAction(s.createMaterialTexture,"tools"),Toolbars.texturelist.add(s.createMaterialTexture,3)});L.push(()=>{MenuBar.removeAction("tools.create_material_texture"),Toolbars.texturelist.remove("tools.create_material_texture")});var $=(t,a)=>{let e=D()??Texture.getDefault(),r=new k(e.layers_enabled?e.layers:Project?Project.textures:null,e.uuid).createMer(!0);if(!r)throw new Error("Failed to generate MER map from selected texture.");r.toBlob(async n=>{if(!n)throw new Error("Failed to save MER map.");let[c,i]=Project?[t?`${t}_mer`:`${e.name??Project.getDisplayName()}_mer`,Project.export_path]:["mer"];Blockbench.export({content:await n.arrayBuffer(),type:"PNG",name:c,extensions:["png"],resource_id:"mer",savetype:"image",startpath:i},a)})};C.push(()=>{s.generateMer=new Action("create_mer",{icon:"lightbulb_circle",name:"Export MER",description:"Exports a texture map from the metalness, emissive, and roughness channels. (For use in Bedrock resource packs.)",condition:{formats:["bedrock","bedrock_block"],project:!0},click(){try{$()}catch(t){console.error("Failed to export MER map:",t),Blockbench.showStatusMessage("Failed to export MER map",3e3)}}}),s.decodeMer=new Action("decode_mer",{name:"Decode MER",icon:"arrow_split",condition:{formats:["bedrock","bedrock_block"],project:!0,selected:{texture:!0}},children:[{icon:"move_item",name:"Decode MER to Textures",description:"Decodes a MER texture map into metalness, emissive, and roughness channels into separate textures",click(){let t=D()??Texture.getDefault(),a=new k([t],t.uuid),e=a.decodeMer(),r=[u.metalness,u.emissive,u.roughness];Undo.initEdit({textures:[t]}),r.forEach(n=>{let c=n.id,i=e[c];if(!i){Blockbench.showStatusMessage(`Failed to decode ${n.label} channel`,3e3);return}let o=new Texture({name:`${t?.name}_${c}`,keep_size:!1}).fromDataURL(i.toDataURL());o.add(!0),a.saveTexture(n,o)}),Undo.finishEdit("Decode MER to textures")}},{icon:"move_group",name:"Decode MER to Layers",description:"Decodes a MER texture map into metalness, emissive, and roughness channels into material layers",condition:()=>D()?.layers_enabled===!0,click(){let t=D()??Texture.getDefault(),a=new k(t.layers_enabled?t.layers:[t],t.uuid),e=a.decodeMer(),r=[u.metalness,u.emissive,u.roughness];Undo.initEdit({textures:[t]}),r.forEach(n=>{let c=n.id,i=e[c];if(!i){Blockbench.showStatusMessage(`Failed to decode ${n.label} channel`,3e3);return}let o=new TextureLayer({name:`${t?.name}_${c}`,data_url:i.toDataURL()},t);a.saveTexture(n,o),o.addForEditing()}),Undo.finishEdit("Decode MER to layers")}}],click(){}}),MenuBar.addAction(s.decodeMer,"tools"),MenuBar.addAction(s.generateMer,"file.export")});L.push(()=>{MenuBar.removeAction("file.export.create_mer"),MenuBar.removeAction("tools.decode_mer")});var Ae=()=>{Project&&Project.textures.forEach(t=>{let a=new k(null,t.uuid),e=a.findTexture(u.normal,!1),r=a.findTexture(u.height,!1),n=a.findTexture(u.albedo,!1),c=a.findTexture(u.metalness,!1)?.name,i=a.findTexture(u.emissive,!1)?.name,o=a.findTexture(u.roughness,!1)?.name,p={};return n||(p.baseColor={type:"color",label:"Base Color",value:"#ff00ff"}),!c&&!i&&!o&&(p.metalness={label:"Metalness",type:"range",min:0,max:255,step:1,value:0},p.emissive={label:"Emissive",type:"range",min:0,max:255,step:1,value:0},p.roughness={label:"Roughness",type:"range",min:0,max:255,step:1,value:0}),e&&(p.depthMap={type:"checkbox",label:"Normal Map",value:"normal"}),r&&(p.depthMap={type:"checkbox",label:"Height Map",value:"heightmap"}),e&&r&&(p.depthMap={type:"radio",label:"Depth Map",options:{normal:"Normal Map",heightmap:"Height"},value:"normal"}),s.textureSetDialog=new Dialog("texture_set",{id:"texture_set",title:"Create Texture Set JSON",buttons:["Create","Cancel"],form:p,cancelIndex:1,onConfirm(f){let x=ee(),h=c||i||o,_={format_version:"1.16.100","minecraft:texture_set":{color:(n?x:f.baseColor?.toHexString())??x,metalness_emissive_roughness:[f.metalness??0,f.emissive??0,f.roughness??255]}};f.depthMap==="normal"&&e||!r&&e?_["minecraft:texture_set"].normal=`${x}_normal`:(!e||f.depthMap==="heightmap")&&r&&(_["minecraft:texture_set"].heightmap=`${x}_heightmap`);let m=d=>{if(!f.depthMap)return d();let v=f.depthMap==="normal"||f.depthMap&&!r,M=v?e:r;if(!M)return d();Blockbench.export({content:M.canvas.toDataURL()??"",type:"PNG",name:`${x}_${v?"normal":"heightmap"}`,extensions:["png"],resource_id:f.depthMap,startpath:Project.export_path,savetype:"image"},w=>{_["minecraft:texture_set"][v?"normal":"heightmap"]=pathToName(w,!1),d()})},g=d=>{if(!n)return d();Blockbench.export({content:n.canvas.toDataURL(),extensions:["png"],type:"PNG",name:x,startpath:Project.export_path,savetype:"image"},v=>{_["minecraft:texture_set"].color=pathToName(v,!1),d()})},l=()=>m(()=>{g(()=>{Blockbench.export({content:JSON.stringify(_,null,2),type:"JSON",name:`${x}.texture_set`,extensions:["json"],resource_id:"texture_set",startpath:Project.export_path,savetype:"text"},()=>{Blockbench.showQuickMessage("Texture set created",2e3),s.textureSetDialog?.hide()})})});if(h){try{$(x,d=>{_["minecraft:texture_set"].metalness_emissive_roughness=pathToName(d,!1),l()})}catch(d){console.warn("Failed to export MER map:",d),Blockbench.showStatusMessage("Failed to export MER map",3e3)}return}l()}}),s.textureSetDialog.show()})};C.push(()=>{s.createTextureSet=new Action("create_texture_set",{name:"Create Texture Set",icon:"layers",description:"Creates a texture set JSON file. Generates a MER when metalness, emissive, or roughness channels are set.",click(){Ae()},condition:{formats:["bedrock","bedrock_block"],project:!0}}),MenuBar.addAction(s.createTextureSet,"file.export")});L.push(()=>{MenuBar.removeAction("file.export.create_texture_set")});C.push(()=>{s.toggleCorrectLights=new Toggle("correct_lights",{category:"preview",name:"Correct Lights",description:"Corrects the lighting in the preview",icon:"fluorescent",default:!1,onChange(t){Preview.all.forEach(a=>{a.renderer.physicallyCorrectLights=t}),Preview.selected.renderer.physicallyCorrectLights=t,Blockbench.showQuickMessage(`Physically corrected lighting is now ${t?"enabled":"disabled"}`,2e3),t&&s.togglePbr?.set(!0),A()},click(){}}),MenuBar.addAction(s.toggleCorrectLights,"preview")});L.push(()=>{MenuBar.removeAction("preview.correct_lights")});var F=()=>{!Project||!Project.bb_materials||(Project.elements.forEach(t=>{t instanceof Cube&&Object.keys(t.faces).forEach(a=>{let r=t.faces[a].getTexture();if(!r)return;let n=Project.bb_materials[r.uuid];n&&(Project.materials[r.uuid]=n)})}),Project.pbr_active=!1,Canvas.updateAll())};var oe=["undo","redo","add_texture","finish_edit","finished_edit","load_project","select_preview_scene","change_texture_path","select_project","load_undo_save","add_cube"],ie=()=>Project&&Project.pbr_active&&A(),Ne=()=>{Blockbench.on(oe.join(" "),ie)},le=()=>{oe.forEach(t=>{Blockbench.removeListener(t,ie)})};C.push(()=>{s.togglePbr=new Toggle("toggle_pbr",{name:"PBR Preview",description:"Toggle PBR Preview",icon:"panorama_photosphere",category:"view",default:!1,click(){},onChange(t){if(t){A(),Ne(),Blockbench.showQuickMessage("PBR Preview is now enabled");return}F(),le(),Blockbench.showQuickMessage("PBR Preview is now disabled")}}),MenuBar.addAction(s.togglePbr,"view")});L.push(()=>{le(),MenuBar.removeAction("view.toggle_pbr")});var ce=t=>{let a=Math.max(-2,Math.min(2,t));Preview.all.forEach(e=>{e.renderer.toneMappingExposure=a}),Preview.selected.renderer.toneMappingExposure=a};C.push(()=>{s.exposureSlider=new NumSlider("display_settings_exposure",{category:"preview",name:"Exposure",description:"Adjusts the exposure of the scene",type:"number",value:1,icon:"exposure",settings:{min:-2,max:2,step:.01,default:1},onBefore(){Number(s.tonemappingSelect?.get())===b.NoToneMapping&&s.tonemappingSelect.change(b.LinearToneMapping.toString()),s.togglePbr?.set(!0)},onChange(t){ce(Number(t))},onAfter(){B()}}),s.resetExposureButton=new Action("display_settings_reset_exposure",{category:"preview",name:"Reset Exposure",description:"Resets the exposure of the scene",icon:"exposure_plus_1",condition:()=>s.exposureSlider!==void 0&&Number(s.exposureSlider?.get())!==1,click(){ce(1),s.exposureSlider?.setValue(1,!0),B()}}),s.tonemappingSelect=new BarSelect("display_settings_tone_mapping",{category:"preview",name:"Tone Mapping",description:"Changes the tone mapping of the preview",type:"select",default_value:b.NoToneMapping,value:Preview.selected.renderer.toneMapping??b.NoToneMapping,icon:"monochrome_photos",options:{[b.NoToneMapping]:"No Tone Mapping",[b.LinearToneMapping]:"Linear",[b.ReinhardToneMapping]:"Reinhard",[b.CineonToneMapping]:"Cineon",[b.NeutralToneMapping]:"Neutral",[b.ACESFilmicToneMapping]:"ACES"},onChange({value:t}){Preview.selected.renderer.toneMapping=Number(t);let a=1;Preview.selected.renderer.toneMapping===b.NoToneMapping?s.exposureSlider?.setValue(a,!0):a=Number(s.exposureSlider?.get()??1),Preview.all.forEach(e=>{e.renderer.toneMapping=Number(t),e.renderer.toneMappingExposure=a}),Preview.selected.renderer.toneMappingExposure=a,Blockbench.showQuickMessage(`Tone mapping set to ${this.getNameFor(t)}`,2e3),s.togglePbr&&!s.togglePbr.value&&s.togglePbr.set(!0),A()}})});var Be=(t,a="texture")=>{t.toBlob(async e=>{e&&Blockbench.export({content:await e.arrayBuffer(),type:"PNG",name:`${a}_n`,extensions:["png"],resource_id:"normal_map",savetype:"image"})})},Re=(t,a="texture")=>{t.toBlob(async e=>{e&&Blockbench.export({content:await e.arrayBuffer(),type:"PNG",name:`${a}_s`,extensions:["png"],resource_id:"specular_map",savetype:"image"})})};C.push(()=>{s.generateLabPbr=new Action("generate_lab_pbr",{icon:"experiment",name:"Generate labPBR textures",description:"Generate a specular and normal map in labPBR format for Java shaders",condition:{formats:["java_block"],project:!0},async click(){let t=D();if(!t)return;let e=new k(t.layers_enabled?t.layers:[t],t.uuid).createLabPbrOutput();if(e===null)return;let r=t.name??(Project?Project.getDisplayName():"texture");await Promise.all([Be(e.normalMap,pathToName(r)),Re(e.specular,pathToName(r))]),Blockbench.showQuickMessage("Exported labPBR textures")}}),s.decodeLabPbr=new Action("decode_lab_pbr",{icon:"frame_source",name:"Decode labPBR textures",description:"Decodes the selected texture into a specular or normal map in labPBR format",condition:{formats:["java"],project:!0,selected:{texture:!0}},click(){let t=TextureLayer.selected?.texture??Texture.all.find(e=>e.selected)??Texture.getDefault(),a=new k(t.layers_enabled?t.layers:[t],t.uuid);if(pathToName(t.name).endsWith("_n")){a.createTexturesFromNormal(t);return}if(pathToName(t.name).endsWith("_s")){a.createTexturesFromSpecular(t);return}Blockbench.showQuickMessage("Failed to decode labPBR texture")}}),MenuBar.addAction(s.generateLabPbr,"file.export"),MenuBar.addAction(s.decodeLabPbr,"tools")});L.push(()=>{MenuBar.removeAction("file.export.generate_lab_pbr")});var O=class t{constructor({colors:a}){this._colors={...Object.fromEntries(Object.keys(u).map(e=>[e,u[e].default??new b.Color(4294967040)])),...a}}get colors(){return this._colors}set colors(a){this._colors={...this._colors,...a}}toString(){let a=Object.entries(this._colors).map(([e,r])=>[e,r.getHexString()]);return JSON.stringify(a)}getChannel(a){return this._colors[a]}static makeLinearColor(a){let e=Math.min(1,Math.max(0,a));return new b.Color(e,e,e).convertSRGBToLinear()}static fromSettings(){let a="#000000",e=Number(s.brushMetalnessSlider?.get()),r=Number(s.brushRoughnessSlider?.get()??1),n=(s.brushEmissiveColor?.get()??a).toString(),c=Number(s.brushHeightSlider?.get()),i=ColorPanel.get(),o={[u.albedo.id]:new b.Color(i),[u.metalness.id]:t.makeLinearColor(e),[u.roughness.id]:t.makeLinearColor(r),[u.emissive.id]:new b.Color(n??a),[u.height.id]:t.makeLinearColor(c),[u.normal.id]:u.normal.default??new b.Color("#8080ff")};return new t({colors:o})}};var ue="materialBrushPresets",q=()=>JSON.parse(localStorage.getItem(ue)||"{}"),Ie=(t,a)=>{let e=q(),r=a??guid(),n=s.userMaterialBrushPresets?.getFormResult()??{},c={};return n.albedo&&(c.albedo=n.albedo.toString()),n.metalness&&(c.metalness=Number(n.metalness)),n.roughness&&(c.roughness=Number(n.roughness)),n.emissive&&(c.emissive=n.emissive.toString()),n.height&&(c.height=Number(n.height)),e[r]=[c,t??"New Preset",H(c)],localStorage.setItem(ue,JSON.stringify(e)),r},me=({metalness:t,roughness:a,emissive:e,height:r,albedo:n})=>{t!==void 0&&s.brushMetalnessSlider?.setValue(t||0,!0),a!==void 0&&s.brushRoughnessSlider?.setValue(a??1,!0),e!==void 0&&s.brushEmissiveColor?.set(e??"#000000"),r!==void 0&&s.brushHeightSlider?.setValue(Math.max(0,Math.min(1,r??.5)),!0),n!==void 0&&ColorPanel.set(n)},z=({id:t})=>Condition({project:!0,tools:["material_brush"],method(){let a=D();return(a?.layers_enabled&&a.layers.find(({channel:e})=>e&&e===t)!==void 0)===!0}}),He=X.extend({name:"UserPresetsDialog",data(){return{userPresets:{},channels:u}},methods:{applyPreset(t){try{let[a,e]=this.userPresets[t],{metalness:r,roughness:n,emissive:c,height:i,albedo:o}=a;me({metalness:Number(r),roughness:Number(n),emissive:c.toString(),height:Number(i),albedo:o.toString()}),s.userMaterialBrushPresets?.hide(),Blockbench.showQuickMessage(`Preset "${e}" applied`,2e3)}catch{Blockbench.showQuickMessage("Failed to apply preset",2e3)}},deletePreset(t){Blockbench.showMessageBox({title:"Delete Preset",message:"Are you sure you want to delete this preset?",confirm:1,cancel:0,buttons:["Cancel","Delete"],checkboxes:{},width:400},a=>{if(a){let e=q(),r=this.userPresets[t][1]??t;delete e[t],localStorage.setItem("materialBrushPresets",JSON.stringify(e)),this.userPresets=e,Blockbench.showQuickMessage(`Preset "${r}" deleted`,2e3)}})},editPreset(t){s.userMaterialBrushPresets?.setFormValues({name:this.userPresets[t][1]??t,...this.userPresets[t][0]})},getSummary(t){return Object.entries(t).filter(([a])=>a in this.channels).map(([a,e])=>a==="albedo"||a==="emissive"?`${this.channels[a]?.label??a}: ${e}`:`${this.channels[a]?.label??a}: ${Number(e).toFixed(1)}`).join(`
`)}},computed:{presets(){return Object.entries(this.userPresets)}},mounted(){this.userPresets=q()},template:`
    <div>
      <ul class="list mobile_scrollbar preset_list">
        <li
          v-for="([key, [settings, name, image]]) in presets"
          :key="key"
          class="user_preset"
        >
          <div v-if="image" class="preset_preview" @click="editPreset(key)">
            <img :src="image" :alt="name" :title="getSummary(settings)" width="96" height="96" />
            <div class="preset_title">{{ name }}</div>
          </div>
          <div v-else>
            <div class="preset_title" @click="editPreset(key)" :title="getSummary(settings)">{{ name }}</div>
          </div>
          <div class="preset_buttons">
            <button class="delete_preset" type="button" @click="deletePreset(key)">
              <i class="material-icons">close</i>
            </button>
          </div>
        </li>
      </ul>
    </div>`});C.push(()=>{s.materialBrushStyles=Blockbench.addCSS(`
  .preset_list {
    display: grid;
    grid-template-columns: repeat(auto-fill, 96px);
    grid-gap: 8px;
    justify-content: start;
    align-items: start;
    margin: 0 auto;
    padding: 8px;
  }

  .user_preset {
    display: flex;
    justify-content: start;
    align-items: center;
    width: 100%;
    padding: 8px;
    position: relative;
  }

  .preset_title {
    font-size: 1em;
    color: var(--color-text);
  }

  .user_preset:hover .preset_title {
    color: var(--color-accent);
  }

  .preset_preview {
    display: flex;
    flex-direction: column;
    flex-wrap: nowrap;
    justify-content: center;
    align-items: center;
    text-align: center;
  }

  .preset_buttons {
    display: flex;
    flex-direction: row;
    align-items: center;
    font-size: 0.8em;
    padding: 0 4px;
  }

  .preset_channel {
    display: flex;
    flex-direction: row;
    align-items: center;
    margin: 0 8px;
    font-size: 0.8em;
  }

  .delete_preset {
    margin-left: 8px;
    padding: 4px;
    height: 24px;
    width: 24px;
    min-width: 24px;
    background-color: transparent;
    color: var(--color-text);
    border: none;
    border-radius: 100%;
    position: absolute;
    right: -8px;
    top: 0;
    filter: drop-shadow(0 0 2px var(--color-shadow));
  }

  .delete_preset:hover {
    background: transparent;
    color: var(--color-accent);
  }

  .delete_preset .material-icons {
    font-size: 0.825em;
  }

  .delete_preset:hover .material-icons {
    color: var(--color-accent);
  }`),s.brushMetalnessSlider=new NumSlider("slider_brush_metalness",{category:"paint",name:"Metalness",description:"Adjust the metalness of the brush",tool_setting:"brush_metalness",settings:{min:0,max:1,step:.01,default:0},condition:()=>z(u.metalness)}),s.brushRoughnessSlider=new NumSlider("slider_brush_roughness",{category:"paint",name:"Roughness",description:"Adjust the roughness of the brush",tool_setting:"brush_roughness",settings:{min:0,max:1,step:.01,default:1},condition:()=>z(u.roughness)}),s.brushEmissiveColor=new ColorPicker("brush_emissive_color",{category:"paint",name:"Emissive",description:"Adjust the emissive color of the brush",value:"#000000",tool_setting:"brush_emissive",condition:()=>z(u.emissive)}),s.brushHeightSlider=new NumSlider("slider_brush_height",{category:"paint",name:"Height",description:"Adjust the height of the brush",tool_setting:"brush_height",settings:{min:0,max:1,step:.01,default:.5},condition:()=>z(u.height)}),s.materialBrushTool=new Tool("material_brush",{name:"Material Brush",description:"Paints across multiple texture layers",icon:"view_in_ar",paintTool:!0,cursor:"cell",category:"tools",toolbar:"brush",condition:{project:!0,selected:{texture:!0},modes:["paint"],method(){return D()?.layers_enabled??!1}},allowed_view_modes:"textured",tool_settings:{brush_metalness:0,brush_roughness:1,brush_emissive:"#000000",brush_height:.5},brush:{blend_modes:!1,shapes:!0,size:!0,softness:!0,opacity:!0,offset_even_radius:!0,floor_coordinates:!0,changePixel(t,a,e,r,{size:n,softness:c,texture:i,x:o,y:p}){let f=O.fromSettings(),x=Object.keys(f.colors),h=Math.floor(n-c*n/100),_=e;return i.layers.forEach(m=>{if(!m.visible||!x.includes(m.channel))return;let g=f.getChannel(m.channel);if(!g)return;let l=Math.sqrt((o-t)**2+(p-a)**2),d=Math.min(1,l/h);if(o%h<=d&&p%h<=d){let v=m.ctx.getImageData(t,a,1,1).data,M=new b.Color(`rgb(${v[0]}, ${v[1]}, ${v[2]})`);g.lerp(M,1)}m.ctx.fillStyle=g.getStyle(),m.ctx.fillRect(t,a,1,1),m.selected&&(_={r:g.r*255,g:g.g*255,b:g.b*255,a:r*255})}),_}},onCanvasClick(t){Painter.startPaintToolCanvas(t,t.event)},onSelect(){Painter.updateNslideValues(),A()},click(){B()}}),s.loadBrushPreset=new Action("load_brush_preset",{icon:"stroke_full",name:"Material Brush Presets",description:"Load or save a brush preset",category:"paint",condition:{project:!0},click(){s.userMaterialBrushPresets=new Dialog("user_brush_presets",{id:"user_brush_presets",title:"Edit Material Brush",component:He,part_order:["lines","component","form"],form:{albedo:{type:"color",label:"Albedo",value:ColorPanel.get(),toggle_enabled:!0},metalness:{type:"number",label:"Metalness",min:0,max:1,step:.01,full_width:!1,toggle_enabled:!0},roughness:{type:"number",label:"Roughness",min:0,max:1,step:.01,toggle_enabled:!0,full_width:!1},emissive:{type:"color",label:"Emissive",value:"#000000",toggle_enabled:!0},height:{type:"number",label:"Height",min:0,max:1,step:.01,toggle_enabled:!0}},onConfirm(t){me({metalness:Number(t.metalness??s.brushMetalnessSlider?.get()),roughness:Number(t.roughness??s.brushRoughnessSlider?.get()),emissive:(t.emissive??s.brushEmissiveColor?.get()).toString(),height:Number(t.height??s.brushHeightSlider?.get()),albedo:(t.albedo??ColorPanel.get()).toString()})},buttons:["Close","Save","Apply"],cancelIndex:0,confirmIndex:2,onButton(t,a){s.materialBrushTool?.select(),t===1&&Blockbench.textPrompt("Save Preset","New Preset",e=>{e&&(Ie(e),Blockbench.showQuickMessage(`Preset "${e}" saved`,2e3))})}}).show()}}),MenuBar.addAction(s.materialBrushTool,"tools.0")});L.push(()=>{MenuBar.removeAction("tools.material_brush")});C.push(()=>{s.materialBrushPanel=new Panel("material_brush_panel",{name:"Material Brush",id:"material_brush_panel",icon:"view_in_ar",toolbars:[new Toolbar("material_brush_toolbar",{id:"material_brush_toolbar",children:["material_brush","load_brush_preset","slider_brush_metalness","slider_brush_roughness","brush_emissive_color","slider_brush_height"],name:"Material Settings"})],condition:{modes:["paint"],project:!0},component:{},expand_button:!0,growable:!1,onFold(){},onResize(){},default_side:"right",default_position:{slot:"right_bar",float_position:[0,0],float_size:[400,300],height:300,folded:!1},insert_after:"color",insert_before:"outliner"})});C.push(()=>{s.displaySettingsPanel=new Panel("display_settings",{name:"PBR Controls",id:"display_settings_panel",icon:"display_settings",toolbars:[new Toolbar("controls_toolbar",{id:"controls_toolbar",children:["toggle_pbr","correct_lights","display_settings_tone_mapping","display_settings_exposure","display_settings_reset_exposure","show_channel_select_menu"],name:"Display Settings"})],display_condition:{modes:["edit","paint","animate"],project:!0},component:{},expand_button:!0,growable:!1,onFold(){},onResize(){},default_side:"left",default_position:{slot:"left_bar",float_position:[0,0],float_size:[400,300],height:300,folded:!1},insert_after:"textures",insert_before:"color"})});(()=>{let t=()=>{C.forEach(e=>e())},a=()=>{F(),L.forEach(e=>e()),Object.entries(s).forEach(([e,r])=>{try{r?.delete()}catch(n){console.warn(`Failed to delete ${e} action:`,n)}})};BBPlugin.register("pbr_preview",{version:"1.1.0",title:"PBR Tools",author:"Jason J. Gardner",description:"Create and view PBR materials in Blockbench. Export textures for Java and RenderDragon shaders.",tags:["Minecraft: Java Edition","Minecraft: Bedrock Edition","PBR"],icon:"icon.png",variant:"both",await_loading:!0,repository:"https://github.com/jasonjgardner/blockbench-plugins",has_changelog:!0,min_version:"4.10.3",onload:t,onunload:a})})();})();
