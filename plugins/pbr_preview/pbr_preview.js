"use strict";(()=>{var v=THREE,W=Vue;var N="_NONE_",d={albedo:{id:"albedo",label:"Albedo",description:"The color of the material",map:"map",icon:"tonality",default:new v.Color(16777215)},metalness:{id:"metalness",label:"Metalness",description:"The material's metalness map",map:"metalnessMap",icon:"brightness_6",default:new v.Color(0)},emissive:{id:"emissive",label:"Emissive",description:"The material's emissive map",map:"emissiveMap",icon:"wb_twilight",default:new v.Color(0)},roughness:{id:"roughness",label:"Roughness",description:"The material's roughness map",map:"roughnessMap",icon:"grain",default:new v.Color(16777215)},height:{id:"height",label:"Height",description:"The material's height map",map:"bumpMap",icon:"landscape",default:new v.Color(16777215)},normal:{id:"normal",label:"Normal",description:"The material's normal map",map:"normalMap",icon:"looks",default:new v.Color("rgb(128, 128, 255)")},ao:{id:"ao",label:"Ambient Occlusion",description:"The material's ambient occlusion map",map:"aoMap",icon:"motion_mode",default:new v.Color(16777215)}},o={},C=[],L=[];C.push(()=>{o.channelProp=new Property(TextureLayer,"enum","channel",{default:N,values:Object.keys(d).map(e=>d[e].id),label:"PBR Channel",exposed:!1}),o.textureChannelProp=new Property(Texture,"enum","channel",{default:N,values:Object.keys(d).map(e=>d[e].id),label:"PBR Channel",exposed:!1}),o.pbrMaterialsProp=new Property(ModelProject,"object","pbr_materials",{default:{},exposed:!1,label:"PBR Materials"}),o.projectMaterialsProp=new Property(ModelProject,"object","bb_materials",{default:{},exposed:!1,label:"Project Materials"}),o.projectPbrModeProp=new Property(ModelProject,"boolean","pbr_active",{default:!1,exposed:!0,values:[],label:"PBR Mode"})});var Te=(e=!0)=>{let a=Project?Project.textures??Texture.all:Texture.all;return e?a.filter(t=>t.layers_enabled&&t.layers.length>0).flatMap(t=>t.layers):a},j=class e{constructor(a,t){this._scope=a??Te(),this._materialUuid=t}merToCanvas(){let a=this.getTexture(d.emissive),t=this.getTexture(d.roughness),r=this.getTexture(d.metalness);if(!a&&!t&&!r){let{metalness:n,emissive:s,roughness:l}=this.decodeMer();n&&(r=e.makePixelatedCanvas(n)),s&&(a=e.makePixelatedCanvas(s)),l&&(t=e.makePixelatedCanvas(l))}return{emissiveMap:a,roughnessMap:t,metalnessMap:r}}getMaterial(a={}){let{emissiveMap:t,roughnessMap:r,metalnessMap:n}=Format.id.startsWith("bedrock")?this.merToCanvas():{emissiveMap:this.getTexture(d.emissive),roughnessMap:this.getTexture(d.roughness),metalnessMap:this.getTexture(d.metalness)},s=this.getTexture(d.normal);return new v.MeshStandardMaterial({map:this.getTexture(d.albedo)??e.makePixelatedCanvas(TextureLayer.selected?.canvas??Texture.all.find(l=>l.selected)?.canvas??Texture.getDefault().canvas),aoMap:this.getTexture(d.ao),bumpMap:this.getTexture(d.height),normalMap:s,normalScale:new v.Vector2(1,1),metalnessMap:n,metalness:n?1:0,roughnessMap:r,roughness:1,emissiveMap:t,emissiveIntensity:t?1:0,emissive:t?16777215:0,envMap:PreviewScene.active?.cubemap??null,envMapIntensity:.95,alphaTest:.1,transparent:!0,...a})}saveTexture(a,t){Project&&(Project.pbr_materials||(Project.pbr_materials={}),Project.pbr_materials[this._materialUuid]||(Project.pbr_materials[this._materialUuid]={}),Project.pbr_materials[this._materialUuid][a.id]=t.uuid,t.extend({channel:a.id}))}findTexture(a,t=!0){if(!Project)return null;let r=this._scope.find(i=>i.channel&&(i.channel===a||i.channel===a.id));if(r)return r;let n=typeof a=="string"?a:a.id;Project.pbr_materials??={};let s=Project.pbr_materials[this._materialUuid];if(!s&&t&&n!==N){let i=new RegExp(`_*${n}(.[^.]+)?$`,"i");return this._scope.find(h=>i.test(h.name))??null}let l=s?.[n];return l?this._scope.find(i=>i.uuid===l)??null:null}static makePixelatedCanvas(a){let t=new v.CanvasTexture(a,void 0,void 0,void 0,v.NearestFilter,v.NearestFilter);return t.needsUpdate=!0,t}getTexture(a){let t=this.findTexture(a);return t?e.makePixelatedCanvas(t.canvas):null}static extractChannel(a,t){let r=a.canvas,n=r.width,s=r.height,l=r.getContext("2d");if(!l||!n||!s)return null;let i=document.createElement("canvas");i.width=n,i.height=s;let h=i.getContext("2d");if(!h)return null;let g={r:0,g:1,b:2,a:3}[t],{data:p}=l.getImageData(0,0,n,s),m=new Uint8ClampedArray(n*s*4);for(let b=0;b<p.length;b+=4)m[b]=p[b+g],m[b+1]=p[b+g],m[b+2]=p[b+g],m[b+3]=255;let _=new ImageData(m,n,s);return h.putImageData(_,0,0),i}decodeMer(a=1){let t=this.findTexture("mer",!0);if(!t)return{metalness:null,emissive:null,emissiveLevel:null,roughness:null,sss:null};let r=e.extractChannel(t,"r"),n=e.extractChannel(t,"g"),s=e.extractChannel(t,"b"),l=e.extractChannel(t,"a"),i=document.createElement("canvas");i.width=t.img.width??16,i.height=t.img.height??16;let h=this.findTexture(d.albedo);h&&(i.width=h.img.width??16,i.height=h.img.height??16);let g=i.getContext("2d"),p=n?.getContext("2d"),m=h?.canvas?.getContext("2d");if(!g||!m||!p)return{metalness:r,emissive:n,roughness:s,sss:l};let _=m.getImageData(0,0,i.width,i.height),b=p.getImageData(0,0,i.width,i.height),x=new Uint8ClampedArray(i.width*i.height*4);for(let u=0;u<_.data.length;u+=4){if(b.data[u]>a){x[u]=_.data[u],x[u+1]=_.data[u+1],x[u+2]=_.data[u+2],x[u+3]=255;continue}x[u]=0,x[u+1]=0,x[u+2]=0,x[u+3]=255}return g.putImageData(new ImageData(x,i.width,i.height),0,0),{metalness:r,emissive:i,emissiveLevel:n,roughness:s,sss:l}}createMer(a=!1){let t=this.findTexture(d.metalness,a),r=this.findTexture(d.emissive,a),n=this.findTexture(d.roughness,a),s=this.findTexture("sss",!1),l=Math.max(t?.img.width??0,r?.img.width??0,n?.img.width??0,Project?Project.texture_width:0,16),i=Math.max(t?.img.height??0,r?.img.height??0,n?.img.height??0,Project?Project.texture_height:0,16),h=document.createElement("canvas");h.width=l,h.height=i;let g=h.getContext("2d");if(!g)return null;let p=t?.img?e.extractChannel(t,"r"):null,m=r?.img?e.extractChannel(r,"g"):null,_=n?.img?e.extractChannel(n,"b"):null,b=s&&s?.img?e.extractChannel(s,"a"):null,x=p?.getContext("2d")?.getImageData(0,0,l,i)??new ImageData(l,i),u=m?.getContext("2d")?.getImageData(0,0,l,i)??new ImageData(l,i),c=_?.getContext("2d")?.getImageData(0,0,l,i)??new ImageData(l,i),f=b?.getContext("2d")?.getImageData(0,0,l,i)??new ImageData(new Uint8ClampedArray(l*i*4).fill(255),l,i),y=new Uint8ClampedArray(l*i*4);for(let M=0;M<y.length;M+=4)y[M]=x.data[M],y[M+1]=u.data[M],y[M+2]=c.data[M],y[M+3]=f.data[M];return g.putImageData(new ImageData(y,l,i),0,0),h}createLabPbrOutput(a=!0){let t=this.findTexture(d.metalness,a),r=this.findTexture(d.emissive,a),n=this.findTexture(d.roughness,a),s=this.findTexture(d.normal,a),l=this.findTexture(d.height,a),i=this.findTexture(d.ao,!1),h=this.findTexture("sss",!0),g=this.findTexture("porosity",!0),p=Math.max(t?.img.width??0,r?.img.width??0,n?.img.width??0,Project?Project.texture_width:0,16),m=Math.max(t?.img.height??0,r?.img.height??0,n?.img.height??0,Project?Project.texture_height:0,16),_=document.createElement("canvas");_.width=p,_.height=m;let b=_.getContext("2d"),x=document.createElement("canvas");x.width=p,x.height=m;let u=x.getContext("2d");if(!b||!u)return null;let c=new Uint8ClampedArray(p*m*4),f=new Uint8ClampedArray(p*m*4),y=t?.canvas,M=r?.canvas,k=n?.canvas,w=h?.canvas,E=g?.canvas,T=y?.getContext("2d"),D=M?.getContext("2d"),I=k?.getContext("2d"),le=w?.getContext("2d"),ce=E?.getContext("2d"),ue=T?.getImageData(0,0,p,m),R=D?.getImageData(0,0,p,m),V=I?.getImageData(0,0,p,m),de=le?.getImageData(0,0,p,m),me=ce?.getImageData(0,0,p,m);for(let P=0;P<c.length;P+=4){let q=V?1-Math.sqrt(V.data[P]/255):0,ye=Math.min(229,Math.max(0,Math.round((ue?.data[P]??q)*229))),Me=me?.data[P],we=de?.data[P];if(c[P]=q*255,c[P+1]=ye,c[P+2]=we??Me??0,!R){c[P+3]=255;continue}let Ce=Math.round((R?.data[P]+R?.data[P+1]+R?.data[P+2])/3);c[P+3]=Ce||255}b.putImageData(new ImageData(c,p,m),0,0);let he=s?.canvas,pe=i?.canvas,ge=l?.canvas,fe=he?.getContext("2d"),xe=pe?.getContext("2d"),be=ge?.getContext("2d"),J=fe?.getImageData(0,0,p,m),ve=xe?.getImageData(0,0,p,m),_e=be?.getImageData(0,0,p,m);for(let P=0;P<f.length;P+=4)f[P]=J?.data[P]??0,f[P+1]=J?.data[P+1]??0,f[P+2]=ve?.data[P+2]??255,f[P+3]=_e?.data[P+3]||255;return u.putImageData(new ImageData(f,p,m),0,0),{specular:_,normalMap:x}}decodeLabPbrNormal(a){let t=a.img.width??16,r=a.img.height??16,n=a.canvas.getContext("2d");if(!n)return{};let s=document.createElement("canvas");s.width=t,s.height=r;let l=document.createElement("canvas");l.width=t,l.height=r;let i=document.createElement("canvas");i.width=t,i.height=r;let h=s.getContext("2d"),g=l.getContext("2d"),p=i.getContext("2d"),{data:m}=n.getImageData(0,0,t,r);if(!m||!h||!g||!p)return{};let _=new Uint8ClampedArray(t*r*4),b=new Uint8ClampedArray(t*r*4),x=new Uint8ClampedArray(t*r*4);for(let u=0;u<m.length;u+=4){let c=u+1,f=u+2,y=u+3;_[u]=m[f],_[c]=m[f],_[f]=m[f],_[y]=255,b[u]=m[u],b[c]=m[c],b[f]=255,b[y]=255,x[u]=m[y],x[c]=m[y],x[f]=m[y],x[y]=255}return h.putImageData(new ImageData(_,t,r),0,0),g.putImageData(new ImageData(b,t,r),0,0),p.putImageData(new ImageData(x,t,r),0,0),{ao:s,normal:l,heightmap:i}}decodeLabPbrSpecular(a){let t=a.img.width??16,r=a.img.height??16,n=a.canvas.getContext("2d");if(!n)return{};let s=document.createElement("canvas");s.width=t,s.height=r;let l=document.createElement("canvas");l.width=t,l.height=r;let i=document.createElement("canvas");i.width=t,i.height=r;let h=document.createElement("canvas");h.width=t,h.height=r;let g=document.createElement("canvas");g.width=t,g.height=r;let p=s.getContext("2d"),m=l.getContext("2d"),_=i.getContext("2d"),b=h.getContext("2d"),x=g.getContext("2d"),{data:u}=n.getImageData(0,0,t,r);if(!u||!p||!m||!_||!b||!x)return{};let c=new Uint8ClampedArray(t*r*4),f=new Uint8ClampedArray(t*r*4),y=new Uint8ClampedArray(t*r*4),M=new Uint8ClampedArray(t*r*4),k=new Uint8ClampedArray(t*r*4);for(let w=0;w<u.length;w+=4){let E=w+1,T=w+2,D=w+3;y[w]=255-u[w],y[E]=255-u[w],y[T]=255-u[w],y[D]=255,c[w]=u[E],c[E]=u[E],c[T]=u[E],c[D]=255,f[w]=u[D],f[E]=u[D],f[T]=u[D],f[D]=255,M[w]=0,M[E]=0,M[T]=0,M[D]=255,k[w]=u[T],k[E]=u[T],k[T]=u[T],k[D]=255,u[T]<65&&(M[w]=u[T],M[E]=u[T],M[T]=u[T],M[D]=255,k[w]=0,k[E]=0,k[T]=0,k[D]=255)}return p.putImageData(new ImageData(c,t,r),0,0),m.putImageData(new ImageData(f,t,r),0,0),_.putImageData(new ImageData(y,t,r),0,0),b.putImageData(new ImageData(M,t,r),0,0),x.putImageData(new ImageData(k,t,r),0,0),{metalness:s,emissive:l,roughness:i,sss:h,porosity:g}}createTexturesFromSpecular(a){let t=this.decodeLabPbrSpecular(a);return Object.entries(t).forEach(([r,n])=>{n&&new Texture({name:`${a.name}_${r}`,saved:!1,particle:!1,keep_size:!1}).fromDataURL(n.toDataURL()).add()}),t}createTexturesFromNormal(a){let t=this.decodeLabPbrNormal(a);return Object.entries(t).forEach(([r,n])=>{n&&new Texture({name:`${a.name}_${r}`,saved:!1,particle:!1,keep_size:!1}).fromDataURL(n.toDataURL()).add()}),t}createNormalMap(a,t=!1){let r=a.canvas.getContext("2d");if(!r)return null;let n=Math.max(a.img.width??a.canvas.width,Project?Project.texture_width:0,16),s=Math.max(a.img.height??a.canvas.height,Project?Project.texture_height:0,16),{data:l}=r.getImageData(0,0,n,s),i=document.createElement("canvas"),h=i.getContext("2d");if(!h)return null;let g=(c,f)=>{let y=(c+f*n)*4;return l[y]/255};i.width=n,i.height=s,h.drawImage(a.img,0,0,n,s);let p=h.getImageData(0,0,n,s),m=p.data,_=c=>{let f=Math.sqrt(c[0]*c[0]+c[1]*c[1]+c[2]*c[2]);return[c[0]/f,c[1]/f,c[2]/f]};for(let c=0;c<s;c++)for(let f=0;f<n;f++){let y=g(Math.max(f-1,0),c),M=g(Math.min(f+1,n-1),c),k=g(f,Math.max(c-1,0)),w=g(f,Math.min(c+1,s-1)),E=M-y,T=w-k,D=_([-E,-T,1]),I=(c*n+f)*4;m[I]=(D[0]+1)/2*255,m[I+1]=(D[1]+1)/2*255,m[I+2]=(D[2]+1)/2*255,m[I+3]=t?g(f,c)*255:255}h.putImageData(p,0,0);let b=i.toDataURL(),x=`${a.name.replace(/_height(map)?/i,"")}_normal`;if(a instanceof TextureLayer){let c=new TextureLayer({name:x,data_url:b,visible:!0},a.texture);return c.addForEditing(),c}let u=new Texture({name:x,saved:!1,particle:!1,keep_size:!1}).fromDataURL(b);return Project&&u.add(),u}createAoMap(a){let t=a.canvas.getContext("2d");if(!t)return null;let r=Math.max(a.img.width??a.canvas.width,Project?Project.texture_width:0,16),n=Math.max(a.img.height??a.canvas.height,Project?Project.texture_height:0,16),{data:s}=t.getImageData(0,0,r,n),l=document.createElement("canvas"),i=l.getContext("2d");if(!i)return null;let h=(x,u)=>{let c=(x+u*r)*4;return s[c]/255};l.width=r,l.height=n,i.drawImage(a.img,0,0,r,n);let g=i.getImageData(0,0,r,n),p=g.data;for(let x=0;x<n;x++)for(let u=0;u<r;u++){let c=h(Math.max(u-1,0),x),f=h(Math.min(u+1,r-1),x),y=h(u,Math.max(x-1,0)),M=h(u,Math.min(x+1,n-1)),k=f-c,w=M-y,E=Math.sqrt(k*k+w*w)*255,T=(x*r+u)*4;p[T]=E,p[T+1]=E,p[T+2]=E,p[T+3]=255}i.putImageData(g,0,0);let m=l.toDataURL(),_=`${a.name.replace(/_height(map)?/i,"")}_ao`;if(a instanceof TextureLayer){let x=new TextureLayer({name:_,data_url:m,visible:!0},a.texture);return x.addForEditing(),x}let b=new Texture({name:_,saved:!1,particle:!1,keep_size:!1}).fromDataURL(m);return Project&&b.add(),b}};var H=class{constructor({lightHeight:a=.66,ambientLight:t=[.1,.1,.1],minLightIntensity:r=0,lightDiffuse:n=[1,1,1]}={}){this.lightHeight=a,this.ambientLight=t,this.minLightIntensity=r,this.lightDiffuse=n}bake(a,t,r){let n=t instanceof HTMLCanvasElement?t:this.createCanvas(t.width,t.height),s=r instanceof HTMLCanvasElement?r:this.createCanvas(r.width,r.height),l=n.getContext("2d"),i=s.getContext("2d");l.drawImage(t,0,0),i.drawImage(r,0,0);let h=l.getImageData(0,0,t.width,t.height),g=i.getImageData(0,0,r.width,r.height),p=[],m=[];for(let b=0;b<g.width;++b){m[b]=[];for(let x=0;x<g.height;++x){let u=(b+x*g.width)*4,c=[(g.data[u+0]/255-.5)*2,(g.data[u+1]/255-.5)*2,(g.data[u+2]/255-.5)*2],f=Math.sqrt(c[0]**2+c[1]**2+c[2]**2);m[b][x]=[c[0]/f,c[1]/f,c[2]/f]}}let _=b=>{let x=this.createCanvas(t.width,t.height),u=x.getContext("2d"),c=u.getImageData(0,0,x.width,x.height),f=[Math.cos(b),Math.sin(b),this.lightHeight];for(let y=0;y<g.width;++y)for(let M=0;M<g.height;++M){let k=m[y][M],w=(y+M*g.width)*4,E=[h.data[w+0]/255,h.data[w+1]/255,h.data[w+2]/255,h.data[w+3]],T=k[0]*f[0]+k[1]*f[1]+k[2]*f[2];T=Math.min(1,Math.max(this.minLightIntensity,T));let D=[T*E[0]*this.lightDiffuse[0]+this.ambientLight[0],T*E[1]*this.lightDiffuse[1]+this.ambientLight[1],T*E[2]*this.lightDiffuse[2]+this.ambientLight[2],E[3]];c.data[w+0]=Math.floor(D[0]*255),c.data[w+1]=Math.floor(D[1]*255),c.data[w+2]=Math.floor(D[2]*255),c.data[w+3]=D[3]}return u.putImageData(c,0,0),x};for(let b=0;b<a;++b){let x=Math.PI*2/a*b;p.push(_(x))}return p}createCanvas(a,t){let r=document.createElement("canvas");return r.width=a,r.height=t,r}};var K=(e,a=8,t=!1)=>{if(!Project)return;let r=Project.selected_texture??Texture.getDefault(),n=new j(r.layers_enabled?r.layers:Project.textures,r.uuid),s=n.findTexture(d.albedo);if(!s){Blockbench.showStatusMessage("Can not bake without a base color assigned.",3e3);return}let l=n.findTexture(d.normal);if(!l){Blockbench.showStatusMessage("Can not bake without a normal map assigned.",3e3);return}let h=new H(e).bake(a,s.canvas,l.canvas),g=new Texture({name:`${s.name}_baked`,saved:!1,particle:!1,keep_size:!1,layers_enabled:!0}).fromDataURL(h[0].toDataURL()),p=t?m=>{let _=n.findTexture(d.emissive);if(!_)return m;let b=_.canvas;if(!b.getContext("2d"))return m;let u=Math.max(m.width,b.width,Project?Project.texture_width:16),c=Math.max(m.height,b.height,Project?Project.texture_height:16),f=document.createElement("canvas");f.width=u,f.height=c;let y=f.getContext("2d");return y?(y.drawImage(m,0,0),y.globalCompositeOperation="screen",y.drawImage(b,0,0),f):m}:m=>m;h.forEach((m,_)=>{new TextureLayer({name:`baked_${_+1}`,data_url:p(m).toDataURL()},g).addForEditing()}),g.add().select(),Blockbench.showQuickMessage("Textures baked \u{1F950}",2e3)};C.push(()=>{o.bakeTexturesDialog=new Dialog("bake_textures",{id:"bake_textures",title:"Bake Textures",buttons:["Bake","Cancel"],form:{ambientLight:{type:"color",label:"Ambient Light",value:"#1f1f1f"},lightDiffuse:{type:"color",label:"Light Diffuse",value:"#ffffff"},lightHeight:{type:"range",label:"Light Height",min:0,max:1,step:.01,value:.66},minLightIntensity:{type:"range",label:"Minimum Light Intensity",min:0,max:1,step:.01,value:0},directions:{type:"number",label:"Directions",value:8,min:1,max:360,step:1},blendEmissive:{type:"checkbox",label:"Blend Emissive",value:!1}},onConfirm(e){let a=new v.Color(e.ambientLight.toString()),t=new v.Color(e.lightDiffuse.toString());K({ambientLight:[a.r,a.g,a.b],lightDiffuse:[t.r,t.g,t.b],lightHeight:Number(e.lightHeight),minLightIntensity:Number(e.minLightIntensity)},e.directions??8,e.blendEmissive??!1)}}),o.bakeTexturesAction=new Action("bake_textures",{icon:"cake",name:"Bake Textures",description:"Bakes textures for the selected PBR material",click(){o.bakeTexturesDialog?.show()}}),MenuBar.addAction(o.bakeTexturesAction,"tools")});L.push(()=>{MenuBar.removeAction("tools.bake_textures")});function S(){return Texture.selected?Texture.selected:TextureLayer.selected?TextureLayer.selected.texture:Project?Project.selected_texture?Project.selected_texture:Project.textures.find(e=>e.selected)??null:Texture.all.find(e=>e.selected)??Texture.getDefault()}function O(){return TextureLayer.selected?TextureLayer.selected:Texture.selected?.selected_layer?Texture.selected.selected_layer:Project.selected_texture!==null&&Project.selected_texture?.layers_enabled===!0?Project.selected_texture.layers.find(e=>e.selected)??Project.selected_texture.layers[0]:S()?.getActiveLayer()??null}function X(){return Project?Project.model_identifier.length>0?Project.model_identifier:Project.getDisplayName():pathToName(S()?.name??"texture")}function Y(e,a){let t;return function(...r){let n=()=>{t=void 0,e.apply(this,r)};clearTimeout(t),t=setTimeout(n,a)}}function Z(e,a){let t=e.getTexture();if(!t||!Project)return null;let r=Project.materials[t.uuid];r.isShaderMaterial&&!Project.bb_materials[t.uuid]&&(Project.bb_materials[t.uuid]=r);let n=new j(t.layers_enabled?t.layers.filter(s=>s.visible)??null:Project.textures,t.uuid).getMaterial(a);return n.side=Canvas.getRenderSide(t),Project.materials[t.uuid]=v.ShaderMaterial.prototype.copy.call(n,r),t}function ee(e){return Object.values(e).filter(a=>a?(Canvas.updateAllFaces(a),!0):!1).length>0}function Pe(e,a){let t={};return e.forAllFaces(r=>{let n=Z(r,a);n&&(t[n.uuid]=n)}),ee(t)}function Ee(e,a){let t={};return Object.keys(e.faces).forEach(r=>{let n=e.faces[r],s=Z(n,a);s&&(t[s.uuid]=s)}),ee(t)}var A=(e={})=>{if(!Project||Texture.all.length===0)return;let a=!1;Project.elements.forEach(t=>{if(t instanceof Mesh&&Pe(t,e)){a=!0;return}t instanceof Cube&&Ee(t,e)&&(a=!0)}),Project.pbr_active=a},B=(e=100)=>Y(A,e);var G={},Q={};Object.entries(d).forEach(([e,a],t)=>{C.push(()=>{G[e]=new Action(`assign_channel_${e}`,{icon:a.icon??"tv_options_edit_channels",name:`Assign to ${a.label.toLocaleLowerCase()} channel`,description:`Assign the selected layer to the ${a.label} channel`,category:"textures",condition:{selected:{texture:!0}},click(r){let n=TextureLayer.selected??(Project?Project.selected_texture:null);if(!n||!Project)return;Undo.initEdit({layers:[n]}),n.extend({channel:a.id});let s=n instanceof TextureLayer?n.texture:n;s.updateChangesAfterEdit(),Project.pbr_materials[s.uuid]||(Project.pbr_materials[s.uuid]={}),Object.entries(Project.pbr_materials[s.uuid]).forEach(([l,i])=>{i===n.uuid&&(delete Project.pbr_materials[s.uuid][l],n.channel=N)}),s.uuid===n.uuid&&(Project.pbr_materials[s.uuid]={}),Project.pbr_materials[s.uuid][e]=n.uuid,Undo.finishEdit("Change channel assignment"),Blockbench.showQuickMessage(`Assigned "${n.name}" to ${a.label} channel`,2e3),A()}}),Q[e]=new Action(`select_channel_${e}`,{icon:a.icon??"tv_options_edit_channels",name:a.label??e,description:`Select the ${a.label} channel`,condition:{project:!0,selected:{texture:!0},modes:["paint"],method(){let r=S();return(r?.layers_enabled?r.layers:Texture.all).some(s=>s.channel===e)}},click(){let r=Texture.selected?.layers_enabled?Texture.selected.layers:Texture.all;if(!r||!r.length)return;let n=r.find(s=>s.channel===e);n&&(n.select(),n.scrollTo())}}),Q[e].addLabel(!0,()=>a.label??e)})});L.push(()=>{Object.values(G).forEach(e=>{e.delete()}),Object.values(Q).forEach(e=>{e.delete()})});C.push(()=>{o.unassignChannel=new Action("unassign_channel",{icon:"cancel",name:"Unassign Channel",description:"Unassign the selected layer from the channel",category:"textures",condition:{selected:{texture:!0},method(){let e=TextureLayer.selected??(Project?Project.selected_texture:null);return!e||!Project?!1:e.channel&&e.channel!==N}},click(){let e=TextureLayer.selected??(Project?Project.selected_texture:null);if(!e||!Project)return;Undo.initEdit({layers:[e]});let a=e instanceof TextureLayer?e.texture:e,t=e.channel;Project.pbr_materials[a.uuid]={},e.channel=N,a.updateChangesAfterEdit(),Undo.finishEdit("Unassign channel"),Blockbench.showQuickMessage(`Unassigned "${e.name}" from ${t} channel`,2e3),A()}}),o.channelMenu=new Menu("channel_menu",[...Object.keys(d).map(e=>`assign_channel_${e}`),"unassign_channel"],{onOpen(){A()}}),o.channelSelectionMenu=new Menu("channel_selection_menu",Object.keys(d).map(e=>`select_channel_${e}`)),o.openChannelMenu=new Action("pbr_channel_menu",{name:"Assign to PBR Channel",icon:"texture",click(e){o.channelMenu?.open(e)},children:[...Object.values(G),o.unassignChannel]}),o.showChannelMenu=new Action("show_channel_menu",{icon:"texture",name:"Assign to PBR Channel",description:"Assign the selected layer to a channel",category:"textures",condition:{modes:["paint"],selected:{texture:!0}},click(e){o.channelMenu?.open(e)}}),o.showChannelSelectionMenu=new Action("show_channel_select_menu",{icon:"tv_options_edit_channels",name:"Select PBR Channel",description:"Select a channel to view",category:"textures",condition:{modes:["paint"],selected:{texture:!0}},click(e){o.channelSelectionMenu?.open(e)}}),o.openChannelMenu&&(MenuBar.addAction(o.openChannelMenu,"image.0"),Texture.prototype.menu.addAction(o.openChannelMenu,"0"),TextureLayer.prototype.menu.addAction(o.openChannelMenu,"0")),Toolbars.layers.add(o.showChannelMenu,1)});L.push(()=>{MenuBar.removeAction("image.pbr_channel_menu"),Texture.prototype.menu.removeAction("pbr_channel_menu"),TextureLayer.prototype.menu.removeAction("pbr_channel_menu"),Toolbars.layers.remove(o.showChannelMenu)});C.push(()=>{o.generateNormal=new Action("generate_normal",{icon:"altitude",name:"Generate Normal Map",description:"Generates a normal map from the height map",condition:()=>(TextureLayer.selected||Texture.all.find(e=>e.selected))!==void 0,click(){let e=O()??S()??Texture.getDefault();if(!e)return;let a=new j(e instanceof Texture&&e.layers_enabled?e.layers:null,e.uuid),t=a.createNormalMap(e);if(t){a.saveTexture(d.normal,t),t.select(),Blockbench.showQuickMessage("Normal map generated",2e3);return}Blockbench.showQuickMessage("Failed to generate normal map",2e3)}}),o.generateAo=new Action("generate_ao",{icon:d.ao.icon??"motion_mode",name:"Generate Ambient Occlusion Map",description:"Generates an ambient occlusion map from the height map",condition:{selected:{texture:!0},project:!0},click(){let e=O()??S()??Texture.getDefault();if(!e)return;let a=new j(e instanceof Texture&&e.layers_enabled?e.layers:null,e.uuid),t=a.findTexture(d.normal)??a.createNormalMap(e);if(!t){Blockbench.showQuickMessage("Unable to generate ambient occlusion map without a normal map",2e3);return}let r=a.createAoMap(t);if(r){a.saveTexture(d.ao,r),r.select(),Blockbench.showQuickMessage("Ambient occlusion map generated",2e3);return}Blockbench.showQuickMessage("Failed to generate ambient occlusion map",2e3)}}),MenuBar.addAction(o.generateNormal,"tools"),MenuBar.addAction(o.generateAo,"tools")});L.push(()=>{MenuBar.removeAction("tools.generate_normal")});var te=(e,a)=>{let t=a??document.createElement("canvas"),r=t.getContext("2d");if(!r)return null;let n=Math.max(Project?Project.texture_width:16,16),s=Math.max(Project?Project.texture_height:16,16);return t.width=n,t.height=s,r.fillStyle=`rgb(${e.r*255}, ${e.g*255}, ${e.b*255})`,r.fillRect(0,0,n,s),t.toDataURL()};C.push(()=>{o.createMaterialTexture=new Action("create_material_texture",{icon:"stacks",name:"Create Material Texture",description:"Creates a new texture for a PBR material",condition:{modes:["edit","paint"],project:!0},click(){if(!Project)return;let e={...d},a=new Texture({name:"New Material",saved:!1,particle:!1,keep_size:!1,layers_enabled:!0}),t=Texture.all.filter(s=>s.selected||s.multi_selected)??Texture.all,r=Texture.selected?new j(t,Texture.selected.uuid):null;try{let s=r?.findTexture(d.albedo,!0)?.canvas.toDataURL()??Texture.selected?.canvas.toDataURL()??te(new v.Color(8421504),a.canvas);if(!s)return;a.fromDataURL(s);let l=new TextureLayer({name:e.albedo.label,visible:!0,data_url:s},a);l.extend({channel:e.albedo.id}),l.addForEditing(),l.texture.updateChangesAfterEdit(),delete e.albedo}catch(s){console.warn("Failed to create base color texture",s),Blockbench.showStatusMessage("Failed to create base color texture in new material",3e3)}let n=Object.keys(e).map(s=>{let l=d[s],i=r?.findTexture(l,!0),h=i?i.canvas.toDataURL():te(l.default??new v.Color(0));if(!h)return;let g=new TextureLayer({name:l.label,visible:!0,data_url:h},a);return g.extend({channel:l.id}),g}).filter(Boolean);Undo.initEdit({textures:Texture.all,layers:n}),a.add().select(),n.map(s=>s.addForEditing()),a.updateChangesAfterEdit(),Undo.finishEdit("Create Material Texture")}}),MenuBar.addAction(o.createMaterialTexture,"tools"),Toolbars.texturelist.add(o.createMaterialTexture,3)});L.push(()=>{MenuBar.removeAction("tools.create_material_texture")});var U=(e,a)=>{let t=S(),r=new j(t.layers_enabled?t.layers:Project?Project.textures:null,t.uuid).createMer(!0);if(!r)throw new Error("Failed to generate MER map from selected texture.");r.toBlob(async n=>{if(!n)throw new Error("Failed to save MER map.");let[s,l]=Project?[e?`${e}_mer`:`${t.name??Project.getDisplayName()}_mer`,Project.export_path]:["mer"];Blockbench.export({content:await n.arrayBuffer(),type:"PNG",name:s,extensions:["png"],resource_id:"mer",savetype:"image",startpath:l},a)})};C.push(()=>{o.generateMer=new Action("create_mer",{icon:"lightbulb_circle",name:"Export MER",description:"Exports a texture map from the metalness, emissive, and roughness channels. (For use in Bedrock resource packs.)",condition:{formats:["bedrock","bedrock_block"],project:!0},click(){try{U()}catch(e){console.error("Failed to export MER map:",e),Blockbench.showStatusMessage("Failed to export MER map",3e3)}}}),o.decodeMer=new Action("decode_mer",{name:"Decode MER",icon:"arrow_split",condition:{formats:["bedrock","bedrock_block"],project:!0,selected:{texture:!0}},children:[{icon:"move_item",name:"Decode MER to Textures",description:"Decodes a MER texture map into metalness, emissive, and roughness channels into separate textures",click(){let e=S()??Texture.getDefault(),a=new j([e],e.uuid),t=a.decodeMer(),r=[d.metalness,d.emissive,d.roughness];Undo.initEdit({textures:[e]}),r.forEach(n=>{let s=n.id,l=t[s];if(!l){Blockbench.showStatusMessage(`Failed to decode ${n.label} channel`,3e3);return}let i=new Texture({name:`${e?.name}_${s}`,keep_size:!1}).fromDataURL(l.toDataURL());i.add(!0),a.saveTexture(n,i)}),Undo.finishEdit("Decode MER to textures")}},{icon:"move_group",name:"Decode MER to Layers",description:"Decodes a MER texture map into metalness, emissive, and roughness channels into material layers",condition:()=>S()?.layers_enabled===!0,click(){let e=TextureLayer.selected?.texture??Texture.all.find(s=>s.selected)??Texture.getDefault(),a=new j(e.layers_enabled?e.layers:[e],e.uuid),t=a.decodeMer(),r=[d.metalness,d.emissive,d.roughness];Undo.initEdit({textures:[e]});let n=e.selected.activateLayers(!0);r.forEach(s=>{let l=s.id,i=t[l];if(!i){Blockbench.showStatusMessage(`Failed to decode ${s.label} channel`,3e3);return}let h=new TextureLayer({name:`${e?.name}_${l}`,data_url:i.toDataURL()},e);a.saveTexture(s,h),h.addForEditing()}),Undo.finishEdit("Decode MER to layers")}}],click(){}}),MenuBar.addAction(o.decodeMer,"tools"),MenuBar.addAction(o.generateMer,"file.export")});L.push(()=>{MenuBar.removeAction("file.export.create_mer"),MenuBar.removeAction("tools.decode_mer")});var Le=()=>{Project&&Project.textures.forEach(e=>{let a=new j(null,e.uuid),t=a.findTexture(d.normal,!1),r=a.findTexture(d.height,!1),n=a.findTexture(d.albedo,!1),s=a.findTexture(d.metalness,!1)?.name,l=a.findTexture(d.emissive,!1)?.name,i=a.findTexture(d.roughness,!1)?.name,h={};return n||(h.baseColor={type:"color",label:"Base Color",value:"#ff00ff"}),!s&&!l&&!i&&(h.metalness={label:"Metalness",type:"range",min:0,max:255,step:1,value:0},h.emissive={label:"Emissive",type:"range",min:0,max:255,step:1,value:0},h.roughness={label:"Roughness",type:"range",min:0,max:255,step:1,value:0}),t&&(h.depthMap={type:"checkbox",label:"Normal Map",value:"normal"}),r&&(h.depthMap={type:"checkbox",label:"Height Map",value:"heightmap"}),t&&r&&(h.depthMap={type:"radio",label:"Depth Map",options:{normal:"Normal Map",heightmap:"Height"},value:"normal"}),o.textureSetDialog=new Dialog("texture_set",{id:"texture_set",title:"Create Texture Set JSON",buttons:["Create","Cancel"],form:h,cancelIndex:1,onConfirm(g){let p=X(),m=s||l||i,_={format_version:"1.16.100","minecraft:texture_set":{color:(n?p:g.baseColor?.toHexString())??p,metalness_emissive_roughness:[g.metalness??0,g.emissive??0,g.roughness??255]}};g.depthMap==="normal"&&t||!r&&t?_["minecraft:texture_set"].normal=`${p}_normal`:(!t||g.depthMap==="heightmap")&&r&&(_["minecraft:texture_set"].heightmap=`${p}_heightmap`);let b=c=>{if(!g.depthMap)return c();let f=g.depthMap==="normal"||g.depthMap&&!r,y=f?t:r;if(!y)return c();Blockbench.export({content:y.canvas.toDataURL()??"",type:"PNG",name:`${p}_${f?"normal":"heightmap"}`,extensions:["png"],resource_id:g.depthMap,startpath:Project.export_path,savetype:"image"},M=>{_["minecraft:texture_set"][f?"normal":"heightmap"]=pathToName(M,!1),c()})},x=c=>{if(!n)return c();Blockbench.export({content:n.canvas.toDataURL(),extensions:["png"],type:"PNG",name:p,startpath:Project.export_path,savetype:"image"},f=>{_["minecraft:texture_set"].color=pathToName(f,!1),c()})},u=()=>b(()=>{x(()=>{Blockbench.export({content:JSON.stringify(_,null,2),type:"JSON",name:`${p}.texture_set`,extensions:["json"],resource_id:"texture_set",startpath:Project.export_path,savetype:"text"},()=>{Blockbench.showQuickMessage("Texture set created",2e3),o.textureSetDialog?.hide()})})});if(m){try{U(p,c=>{_["minecraft:texture_set"].metalness_emissive_roughness=pathToName(c,!1),u()})}catch(c){console.warn("Failed to export MER map:",c),Blockbench.showStatusMessage("Failed to export MER map",3e3)}return}u()}}),o.textureSetDialog.show()})};C.push(()=>{o.createTextureSet=new Action("create_texture_set",{name:"Create Texture Set",icon:"layers",description:"Creates a texture set JSON file. Generates a MER when metalness, emissive, or roughness channels are set.",click(){Le()},condition:{formats:["bedrock","bedrock_block"],project:!0}}),MenuBar.addAction(o.createTextureSet,"file.export")});L.push(()=>{MenuBar.removeAction("file.export.create_texture_set")});C.push(()=>{o.toggleCorrectLights=new Toggle("correct_lights",{category:"preview",name:"Correct Lights",description:"Corrects the lighting in the preview",icon:"fluorescent",default:!1,onChange(e){Preview.all.forEach(a=>{a.renderer.physicallyCorrectLights=e}),Preview.selected.renderer.physicallyCorrectLights=e,Blockbench.showQuickMessage(`Physically corrected lighting is now ${e?"enabled":"disabled"}`,2e3),e&&o.togglePbr?.set(!0),B()},click(){}}),MenuBar.addAction(o.toggleCorrectLights,"preview")});L.push(()=>{MenuBar.removeAction("preview.correct_lights")});var $=()=>{!Project||!Project.bb_materials||(Project.elements.forEach(e=>{e instanceof Cube&&Object.keys(e.faces).forEach(a=>{let r=e.faces[a].getTexture();if(!r)return;let n=Project.bb_materials[r.uuid];n&&(Project.materials[r.uuid]=n)})}),Project.pbr_active=!1,Canvas.updateAll())};var ae=["undo","redo","add_texture","finish_edit","finished_edit","load_project","select_preview_scene","change_texture_path","select_project","load_undo_save","add_cube"],re=()=>Project&&Project.pbr_active&&A(),je=()=>{Blockbench.on(ae.join(" "),re)},ne=()=>{ae.forEach(e=>{Blockbench.removeListener(e,re)})};C.push(()=>{o.togglePbr=new Toggle("toggle_pbr",{name:"PBR Preview",description:"Toggle PBR Preview",icon:"panorama_photosphere",category:"view",default:!1,click(){},onChange(e){if(e){A(),je(),Blockbench.showQuickMessage("PBR Preview is now enabled");return}$(),ne(),Blockbench.showQuickMessage("PBR Preview is now disabled")}}),MenuBar.addAction(o.togglePbr,"view")});L.push(()=>{ne(),MenuBar.removeAction("view.toggle_pbr")});var se=e=>{let a=Math.max(-2,Math.min(2,e));Preview.all.forEach(t=>{t.renderer.toneMappingExposure=a}),Preview.selected.renderer.toneMappingExposure=a};C.push(()=>{o.exposureSlider=new NumSlider("display_settings_exposure",{category:"preview",name:"Exposure",description:"Adjusts the exposure of the scene",type:"number",value:1,icon:"exposure",settings:{min:-2,max:2,step:.01,default:1},onBefore(){Number(o.tonemappingSelect?.get())===v.NoToneMapping&&o.tonemappingSelect.change(v.LinearToneMapping.toString()),o.togglePbr?.set(!0)},onChange(e){se(Number(e))},onAfter(){B()}}),o.resetExposureButton=new Action("display_settings_reset_exposure",{category:"preview",name:"Reset Exposure",description:"Resets the exposure of the scene",icon:"exposure_plus_1",condition:()=>o.exposureSlider!==void 0&&Number(o.exposureSlider?.get())!==1,click(){se(1),o.exposureSlider?.setValue(1,!0),B()}}),o.tonemappingSelect=new BarSelect("display_settings_tone_mapping",{category:"preview",name:"Tone Mapping",description:"Changes the tone mapping of the preview",type:"select",default_value:v.NoToneMapping,value:Preview.selected.renderer.toneMapping??v.NoToneMapping,icon:"monochrome_photos",options:{[v.NoToneMapping]:"No Tone Mapping",[v.LinearToneMapping]:"Linear",[v.ReinhardToneMapping]:"Reinhard",[v.CineonToneMapping]:"Cineon",[v.NeutralToneMapping]:"Neutral",[v.ACESFilmicToneMapping]:"ACES"},onChange({value:e}){Preview.selected.renderer.toneMapping=Number(e);let a=1;Preview.selected.renderer.toneMapping===v.NoToneMapping?o.exposureSlider?.setValue(a,!0):a=Number(o.exposureSlider?.get()??1),Preview.all.forEach(t=>{t.renderer.toneMapping=Number(e),t.renderer.toneMappingExposure=a}),Preview.selected.renderer.toneMappingExposure=a,Blockbench.showQuickMessage(`Tone mapping set to ${this.getNameFor(e)}`,2e3),o.togglePbr&&!o.togglePbr.value&&o.togglePbr.set(!0),A()}})});var De=(e,a="texture")=>{e.toBlob(async t=>{t&&Blockbench.export({content:await t.arrayBuffer(),type:"PNG",name:`${a}_n`,extensions:["png"],resource_id:"normal_map",savetype:"image"})})},ke=(e,a="texture")=>{e.toBlob(async t=>{t&&Blockbench.export({content:await t.arrayBuffer(),type:"PNG",name:`${a}_s`,extensions:["png"],resource_id:"specular_map",savetype:"image"})})};C.push(()=>{o.generateLabPbr=new Action("generate_lab_pbr",{icon:"experiment",name:"Generate labPBR textures",description:"Generate a specular and normal map in labPBR format for Java shaders",condition:{formats:["java_block"],project:!0},async click(){let e=S();if(!e)return;let t=new j(e.layers_enabled?e.layers:[e],e.uuid).createLabPbrOutput();if(t===null)return;let r=e.name??(Project?Project.getDisplayName():"texture");await Promise.all([De(t.normalMap,pathToName(r)),ke(t.specular,pathToName(r))]),Blockbench.showQuickMessage("Exported labPBR textures")}}),o.decodeLabPbr=new Action("decode_lab_pbr",{icon:"frame_source",name:"Decode labPBR textures",description:"Decodes the selected texture into a specular or normal map in labPBR format",condition:{formats:["java"],project:!0,selected:{texture:!0}},click(){let e=TextureLayer.selected?.texture??Texture.all.find(t=>t.selected)??Texture.getDefault(),a=new j(e.layers_enabled?e.layers:[e],e.uuid);if(pathToName(e.name).endsWith("_n")){a.createTexturesFromNormal(e);return}if(pathToName(e.name).endsWith("_s")){a.createTexturesFromSpecular(e);return}Blockbench.showQuickMessage("Failed to decode labPBR texture")}}),MenuBar.addAction(o.generateLabPbr,"file.export"),MenuBar.addAction(o.decodeLabPbr,"tools")});L.push(()=>{MenuBar.removeAction("file.export.generate_lab_pbr")});var F=class e{constructor({colors:a}){this._colors={...Object.fromEntries(Object.keys(d).map(t=>[t,d[t].default??new v.Color(4294967040)])),...a}}get colors(){return this._colors}set colors(a){this._colors={...this._colors,...a}}toString(){let a=Object.entries(this._colors).map(([t,r])=>[t,r.getHexString()]);return JSON.stringify(a)}getChannel(a){return this._colors[a]}static makeLinearColor(a){let t=Math.min(1,Math.max(0,a));return new v.Color(t,t,t).convertSRGBToLinear()}static fromSettings(){let a="#000000",t=Number(o.brushMetalnessSlider?.get()),r=Number(o.brushRoughnessSlider?.get()??1),n=(o.brushEmissiveColor?.get()??a).toString(),s=Number(o.brushHeightSlider?.get()),l=ColorPanel.get(),i={[d.albedo.id]:new v.Color(l),[d.metalness.id]:e.makeLinearColor(t),[d.roughness.id]:e.makeLinearColor(r),[d.emissive.id]:new v.Color(n??a),[d.height.id]:e.makeLinearColor(s),[d.normal.id]:d.normal.default??new v.Color("#8080ff")};return new e({colors:i})}};var Se=e=>{let a=new v.WebGLRenderer({alpha:!0,antialias:!0}),t=new v.Scene,r=new v.PerspectiveCamera(75,96/96,.1,1e3),n=new v.AmbientLight(16777215,.75);t.add(n);let s=new v.PointLight(16777215,1,100);s.position.set(5,5,5),t.add(s);let l=new v.SphereGeometry(1,32,32),i=new v.MeshStandardMaterial({color:e.albedo,metalness:e.metalness??0,roughness:e.roughness??1,emissive:e.emissive,bumpScale:e.height??0,envMap:PreviewScene.active?.cubemap??null,envMapIntensity:.5}),h=new v.Mesh(l,i);return t.add(h),r.position.x=0,r.position.y=0,r.position.z=2,a.setSize(96,96),a.render(t,r),a.domElement.toDataURL()},oe="materialBrushPresets",z=()=>JSON.parse(localStorage.getItem(oe)||"{}"),Ae=(e,a)=>{let t=z(),r=a??guid(),n=o.userMaterialBrushPresets?.getFormResult()??{},s={};return n.albedo&&(s.albedo=n.albedo.toString()),n.metalness&&(s.metalness=Number(n.metalness)),n.roughness&&(s.roughness=Number(n.roughness)),n.emissive&&(s.emissive=n.emissive.toString()),n.height&&(s.height=Number(n.height)),t[r]=[s,e??"New Preset",Se(s)],localStorage.setItem(oe,JSON.stringify(t)),r},ie=({metalness:e,roughness:a,emissive:t,height:r,albedo:n})=>{e!==void 0&&o.brushMetalnessSlider?.setValue(e||0,!0),a!==void 0&&o.brushRoughnessSlider?.setValue(a??1,!0),t!==void 0&&o.brushEmissiveColor?.set(t??"#000000"),r!==void 0&&o.brushHeightSlider?.setValue(Math.max(0,Math.min(1,r??.5)),!0),n!==void 0&&ColorPanel.set(n)},Ne=W.extend({name:"UserPresetsDialog",data(){return{userPresets:{},channels:d}},methods:{applyPreset(e){try{let[a,t]=this.userPresets[e],{metalness:r,roughness:n,emissive:s,height:l,albedo:i}=a;ie({metalness:Number(r),roughness:Number(n),emissive:s.toString(),height:Number(l),albedo:i.toString()}),o.userMaterialBrushPresets?.hide(),Blockbench.showQuickMessage(`Preset "${t}" applied`,2e3)}catch{Blockbench.showQuickMessage("Failed to apply preset",2e3)}},deletePreset(e){Blockbench.showMessageBox({title:"Delete Preset",message:"Are you sure you want to delete this preset?",confirm:1,cancel:0,buttons:["Cancel","Delete"],checkboxes:{},width:400},a=>{if(a){let t=z(),r=this.userPresets[e][1]??e;delete t[e],localStorage.setItem("materialBrushPresets",JSON.stringify(t)),this.userPresets=t,Blockbench.showQuickMessage(`Preset "${r}" deleted`,2e3)}})},editPreset(e){o.userMaterialBrushPresets?.setFormValues({name:this.userPresets[e][1]??e,...this.userPresets[e][0]})},getSummary(e){return Object.entries(e).filter(([a])=>a in this.channels).map(([a,t])=>a==="albedo"||a==="emissive"?`${this.channels[a]?.label??a}: ${t}`:`${this.channels[a]?.label??a}: ${Number(t).toFixed(1)}`).join(`
`)}},computed:{presets(){return Object.entries(this.userPresets)}},mounted(){this.userPresets=z()},template:`
    <div>
      <ul class="list mobile_scrollbar preset_list">
        <li
          v-for="([key, [settings, name, image]]) in presets"
          :key="key"
          class="user_preset"
        >
          <div v-if="image" class="preset_preview" @click="editPreset(key)">
            <img :src="image" :alt="name" :title="getSummary(settings)" width="96" height="96" />
            <div class="preset_title">{{ name }}</div>
          </div>
          <div v-else>
            <div class="preset_title" @click="editPreset(key)" :title="getSummary(settings)">{{ name }}</div>
          </div>
          <div class="preset_buttons">
            <button class="delete_preset" type="button" @click="deletePreset(key)">
              <i class="material-icons">close</i>
            </button>
          </div>
        </li>
      </ul>
    </div>`});C.push(()=>{o.materialBrushStyles=Blockbench.addCSS(`
  .preset_list {
    display: grid;
    grid-template-columns: repeat(auto-fill, 96px);
    grid-gap: 8px;
    justify-content: start;
    align-items: start;
    margin: 0 auto;
    padding: 8px;
  }

  .user_preset {
    display: flex;
    justify-content: start;
    align-items: center;
    width: 100%;
    padding: 8px;
    position: relative;
  }

  .preset_title {
    font-size: 1em;
    color: var(--color-text);
  }

  .user_preset:hover .preset_title {
    color: var(--color-accent);
  }

  .preset_preview {
    display: flex;
    flex-direction: column;
    flex-wrap: nowrap;
    justify-content: center;
    align-items: center;
    text-align: center;
  }

  .preset_buttons {
    display: flex;
    flex-direction: row;
    align-items: center;
    font-size: 0.8em;
    padding: 0 4px;
  }

  .preset_channel {
    display: flex;
    flex-direction: row;
    align-items: center;
    margin: 0 8px;
    font-size: 0.8em;
  }

  .delete_preset {
    margin-left: 8px;
    padding: 4px;
    height: 24px;
    width: 24px;
    min-width: 24px;
    background-color: transparent;
    color: var(--color-text);
    border: none;
    border-radius: 100%;
    position: absolute;
    right: -8px;
    top: 0;
    filter: drop-shadow(0 0 2px var(--color-shadow));
  }

  .delete_preset .material-icons {
    font-size: 0.825em;
  }

  .delete_preset:hover {
    background: transparent;
    color: var(--color-accent);
  }

  .delete_preset:hover .material-icons {
    color: var(--color-accent);
  }
  `),o.brushMetalnessSlider=new NumSlider("slider_brush_metalness",{category:"paint",name:"Metalness",description:"Adjust the metalness of the brush",settings:{min:0,max:1,step:.01,default:0},condition:()=>{if(!Project)return!1;let e=Project.selected_texture;return e?.layers_enabled?e.layers.find(({channel:a})=>a===d.metalness.id)!==void 0:!1}}),o.brushRoughnessSlider=new NumSlider("slider_brush_roughness",{category:"paint",name:"Roughness",description:"Adjust the roughness of the brush",settings:{min:0,max:1,step:.01,default:1},condition:()=>{if(!Project)return!1;let e=Project.selected_texture;return e?.layers_enabled?e.layers.find(({channel:a})=>a===d.roughness.id)!==void 0:!1}}),o.brushEmissiveColor=new ColorPicker("brush_emissive_color",{category:"paint",name:"Emissive",description:"Adjust the emissive color of the brush",value:"#000000",condition:()=>{if(!Project)return!1;let e=Project.selected_texture;return e?.layers_enabled?e.layers.find(({channel:a})=>a===d.emissive.id)!==void 0:!1}}),o.brushHeightSlider=new NumSlider("slider_brush_height",{category:"paint",name:"Height",description:"Adjust the height of the brush",settings:{min:0,max:1,step:.01,default:.5},condition:()=>{if(!Project)return!1;let e=Project.selected_texture;return e?.layers_enabled?e.layers.find(({channel:a})=>a===d.height.id)!==void 0:!1}}),o.materialBrushTool=new Tool("material_brush",{name:"Material Brush",description:"Paints across multiple texture layers",icon:"view_in_ar",paintTool:!0,cursor:"cell",category:"tools",toolbar:"brush",condition:{project:!0,selected:{texture:!0},modes:["paint"],method(){return S()?.layers_enabled??!1}},allowed_view_modes:"textured",brush:{blend_modes:!1,shapes:!0,size:!0,softness:!0,opacity:!0,offset_even_radius:!0,floor_coordinates:!0,changePixel(e,a,t,r,{size:n,softness:s,texture:l}){let i=F.fromSettings(),h=Object.keys(i.colors),g=t;return l.layers.forEach(p=>{if(!p.visible||!h.includes(p.channel))return;let m=i.getChannel(p.channel);m&&(p.ctx.fillStyle=m.getStyle(),p.ctx.fillRect(n*e,n*a,n,n),p.selected&&(g={r:m.r*255,g:m.g*255,b:m.b*255,a:r*255}))}),g}},onCanvasClick(e){Painter.startPaintToolCanvas(e,e.event)},onSelect(){Painter.updateNslideValues(),A()},click(){B()}}),o.loadBrushPreset=new Action("load_brush_preset",{icon:"stroke_full",name:"Material Brush Presets",description:"Load or save a brush preset",category:"paint",condition:{project:!0},click(){o.userMaterialBrushPresets=new Dialog("user_brush_presets",{id:"user_brush_presets",title:"Edit Material Brush",component:Ne,part_order:["lines","component","form"],form:{albedo:{type:"color",label:"Albedo",value:ColorPanel.get(),toggle_enabled:!0},metalness:{type:"number",label:"Metalness",min:0,max:1,step:.01,full_width:!1,toggle_enabled:!0},roughness:{type:"number",label:"Roughness",min:0,max:1,step:.01,toggle_enabled:!0,full_width:!1},emissive:{type:"color",label:"Emissive",value:"#000000",toggle_enabled:!0},height:{type:"number",label:"Height",min:0,max:1,step:.01,toggle_enabled:!0}},onConfirm(e){ie({metalness:Number(e.metalness??o.brushMetalnessSlider?.get()),roughness:Number(e.roughness??o.brushRoughnessSlider?.get()),emissive:(e.emissive??o.brushEmissiveColor?.get()).toString(),height:Number(e.height??o.brushHeightSlider?.get()),albedo:(e.albedo??ColorPanel.get()).toString()})},buttons:["Close","Save","Apply"],cancelIndex:0,confirmIndex:2,onButton(e,a){e===1&&Blockbench.textPrompt("Save Preset","New Preset",t=>{t&&(Ae(t),Blockbench.showQuickMessage(`Preset "${t}" saved`,2e3))})}}).show()}}),MenuBar.addAction(o.materialBrushTool,"tools.0")});L.push(()=>{MenuBar.removeAction("tools.material_brush")});C.push(()=>{o.materialBrushPanel=new Panel("material_brush_panel",{name:"Material Brush",id:"material_brush_panel",icon:"view_in_ar",toolbars:[new Toolbar("material_brush_toolbar",{id:"material_brush_toolbar",children:["material_brush","load_brush_preset","slider_brush_metalness","slider_brush_roughness","brush_emissive_color","slider_brush_height"],name:"Material Settings"})],condition:{modes:["paint"],project:!0},component:{},expand_button:!0,growable:!1,onFold(){},onResize(){},default_side:"right",default_position:{slot:"right_bar",float_position:[0,0],float_size:[400,300],height:300,folded:!1},insert_after:"color",insert_before:"outliner"})});C.push(()=>{o.displaySettingsPanel=new Panel("display_settings",{name:"PBR Controls",id:"display_settings_panel",icon:"display_settings",toolbars:[new Toolbar("controls_toolbar",{id:"controls_toolbar",children:["toggle_pbr","correct_lights","display_settings_tone_mapping","display_settings_exposure","display_settings_reset_exposure","show_channel_select_menu"],name:"Display Settings"})],display_condition:{modes:["edit","paint","animate"],project:!0},component:{},expand_button:!0,growable:!1,onFold(){},onResize(){},default_side:"left",default_position:{slot:"left_bar",float_position:[0,0],float_size:[400,300],height:300,folded:!1},insert_after:"textures",insert_before:"color"})});(()=>{let e=()=>{C.forEach(t=>t())},a=()=>{$(),L.forEach(t=>t()),Object.entries(o).forEach(([t,r])=>{try{r?.delete()}catch(n){console.warn(`Failed to delete ${t} action:`,n)}})};BBPlugin.register("pbr_preview",{version:"1.1.0",title:"PBR Tools",author:"Jason J. Gardner",description:"Create and view PBR materials in Blockbench. Export textures for Java and RenderDragon shaders.",tags:["Minecraft: Java Edition","Minecraft: Bedrock Edition","PBR"],icon:"icon.png",variant:"both",await_loading:!0,repository:"https://github.com/jasonjgardner/blockbench-plugins",has_changelog:!0,min_version:"4.10.3",onload:e,onunload:a})})();})();
